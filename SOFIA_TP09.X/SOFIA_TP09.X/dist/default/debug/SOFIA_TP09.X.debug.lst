

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jan 29 09:03:13 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    17                           	psect	clrtext,global,class=CODE,space=0,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 07/09/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1827 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0008                     bsr             equ	8
    81     0005                     fsr0h           equ	5
    82     0004                     fsr0l           equ	4
    83     0007                     fsr1h           equ	7
    84     0006                     fsr1l           equ	6
    85     0000                     indf            equ	0
    86     0000                     indf0           equ	0
    87     0001                     indf1           equ	1
    88     000B                     intcon          equ	11
    89     0002                     pc              equ	2
    90     0002                     pcl             equ	2
    91     000A                     pclath          equ	10
    92     0003                     status          equ	3
    93     0009                     wreg            equ	9
    94     0000                     INDF0           equ	0	;# 
    95     0001                     INDF1           equ	1	;# 
    96     0002                     PCL             equ	2	;# 
    97     0003                     STATUS          equ	3	;# 
    98     0004                     FSR0L           equ	4	;# 
    99     0005                     FSR0H           equ	5	;# 
   100     0006                     FSR1L           equ	6	;# 
   101     0007                     FSR1H           equ	7	;# 
   102     0008                     BSR             equ	8	;# 
   103     0009                     WREG            equ	9	;# 
   104     000A                     PCLATH          equ	10	;# 
   105     000B                     INTCON          equ	11	;# 
   106     000C                     PORTA           equ	12	;# 
   107     000D                     PORTB           equ	13	;# 
   108     0011                     PIR1            equ	17	;# 
   109     0012                     PIR2            equ	18	;# 
   110     0013                     PIR3            equ	19	;# 
   111     0014                     PIR4            equ	20	;# 
   112     0015                     TMR0            equ	21	;# 
   113     0016                     TMR1            equ	22	;# 
   114     0016                     TMR1L           equ	22	;# 
   115     0017                     TMR1H           equ	23	;# 
   116     0018                     T1CON           equ	24	;# 
   117     0019                     T1GCON          equ	25	;# 
   118     001A                     TMR2            equ	26	;# 
   119     001B                     PR2             equ	27	;# 
   120     001C                     T2CON           equ	28	;# 
   121     001E                     CPSCON0         equ	30	;# 
   122     001F                     CPSCON1         equ	31	;# 
   123     008C                     TRISA           equ	140	;# 
   124     008D                     TRISB           equ	141	;# 
   125     0091                     PIE1            equ	145	;# 
   126     0092                     PIE2            equ	146	;# 
   127     0093                     PIE3            equ	147	;# 
   128     0094                     PIE4            equ	148	;# 
   129     0095                     OPTION_REG      equ	149	;# 
   130     0096                     PCON            equ	150	;# 
   131     0097                     WDTCON          equ	151	;# 
   132     0098                     OSCTUNE         equ	152	;# 
   133     0099                     OSCCON          equ	153	;# 
   134     009A                     OSCSTAT         equ	154	;# 
   135     009B                     ADRES           equ	155	;# 
   136     009B                     ADRESL          equ	155	;# 
   137     009C                     ADRESH          equ	156	;# 
   138     009D                     ADCON0          equ	157	;# 
   139     009E                     ADCON1          equ	158	;# 
   140     010C                     LATA            equ	268	;# 
   141     010D                     LATB            equ	269	;# 
   142     0111                     CM1CON0         equ	273	;# 
   143     0112                     CM1CON1         equ	274	;# 
   144     0113                     CM2CON0         equ	275	;# 
   145     0114                     CM2CON1         equ	276	;# 
   146     0115                     CMOUT           equ	277	;# 
   147     0116                     BORCON          equ	278	;# 
   148     0117                     FVRCON          equ	279	;# 
   149     0118                     DACCON0         equ	280	;# 
   150     0119                     DACCON1         equ	281	;# 
   151     011A                     SRCON0          equ	282	;# 
   152     011B                     SRCON1          equ	283	;# 
   153     011D                     APFCON0         equ	285	;# 
   154     011E                     APFCON1         equ	286	;# 
   155     018C                     ANSELA          equ	396	;# 
   156     018D                     ANSELB          equ	397	;# 
   157     0191                     EEADR           equ	401	;# 
   158     0191                     EEADRL          equ	401	;# 
   159     0192                     EEADRH          equ	402	;# 
   160     0193                     EEDAT           equ	403	;# 
   161     0193                     EEDATL          equ	403	;# 
   162     0193                     EEDATA          equ	403	;# 
   163     0194                     EEDATH          equ	404	;# 
   164     0195                     EECON1          equ	405	;# 
   165     0196                     EECON2          equ	406	;# 
   166     0199                     RCREG           equ	409	;# 
   167     019A                     TXREG           equ	410	;# 
   168     019B                     SP1BRG          equ	411	;# 
   169     019B                     SP1BRGL         equ	411	;# 
   170     019B                     SPBRG           equ	411	;# 
   171     019B                     SPBRGL          equ	411	;# 
   172     019C                     SP1BRGH         equ	412	;# 
   173     019C                     SPBRGH          equ	412	;# 
   174     019D                     RCSTA           equ	413	;# 
   175     019E                     TXSTA           equ	414	;# 
   176     019F                     BAUDCON         equ	415	;# 
   177     020C                     WPUA            equ	524	;# 
   178     020D                     WPUB            equ	525	;# 
   179     0211                     SSP1BUF         equ	529	;# 
   180     0211                     SSPBUF          equ	529	;# 
   181     0212                     SSP1ADD         equ	530	;# 
   182     0212                     SSPADD          equ	530	;# 
   183     0213                     SSP1MSK         equ	531	;# 
   184     0213                     SSPMSK          equ	531	;# 
   185     0214                     SSP1STAT        equ	532	;# 
   186     0214                     SSPSTAT         equ	532	;# 
   187     0215                     SSP1CON1        equ	533	;# 
   188     0215                     SSPCON1         equ	533	;# 
   189     0215                     SSPCON          equ	533	;# 
   190     0216                     SSP1CON2        equ	534	;# 
   191     0216                     SSPCON2         equ	534	;# 
   192     0217                     SSP1CON3        equ	535	;# 
   193     0217                     SSPCON3         equ	535	;# 
   194     0219                     SSP2BUF         equ	537	;# 
   195     021A                     SSP2ADD         equ	538	;# 
   196     021B                     SSP2MSK         equ	539	;# 
   197     021C                     SSP2STAT        equ	540	;# 
   198     021D                     SSP2CON1        equ	541	;# 
   199     021E                     SSP2CON2        equ	542	;# 
   200     021F                     SSP2CON3        equ	543	;# 
   201     0291                     CCPR1           equ	657	;# 
   202     0291                     CCPR1L          equ	657	;# 
   203     0292                     CCPR1H          equ	658	;# 
   204     0293                     CCP1CON         equ	659	;# 
   205     0294                     PWM1CON         equ	660	;# 
   206     0295                     CCP1AS          equ	661	;# 
   207     0295                     ECCP1AS         equ	661	;# 
   208     0296                     PSTR1CON        equ	662	;# 
   209     0298                     CCPR2           equ	664	;# 
   210     0298                     CCPR2L          equ	664	;# 
   211     0299                     CCPR2H          equ	665	;# 
   212     029A                     CCP2CON         equ	666	;# 
   213     029B                     PWM2CON         equ	667	;# 
   214     029C                     CCP2AS          equ	668	;# 
   215     029C                     ECCP2AS         equ	668	;# 
   216     029D                     PSTR2CON        equ	669	;# 
   217     029E                     CCPTMRS         equ	670	;# 
   218     029E                     CCPTMRS0        equ	670	;# 
   219     0311                     CCPR3           equ	785	;# 
   220     0311                     CCPR3L          equ	785	;# 
   221     0312                     CCPR3H          equ	786	;# 
   222     0313                     CCP3CON         equ	787	;# 
   223     0318                     CCPR4           equ	792	;# 
   224     0318                     CCPR4L          equ	792	;# 
   225     0319                     CCPR4H          equ	793	;# 
   226     031A                     CCP4CON         equ	794	;# 
   227     0394                     IOCBP           equ	916	;# 
   228     0395                     IOCBN           equ	917	;# 
   229     0396                     IOCBF           equ	918	;# 
   230     039A                     CLKRCON         equ	922	;# 
   231     039C                     MDCON           equ	924	;# 
   232     039D                     MDSRC           equ	925	;# 
   233     039E                     MDCARL          equ	926	;# 
   234     039F                     MDCARH          equ	927	;# 
   235     0415                     TMR4            equ	1045	;# 
   236     0416                     PR4             equ	1046	;# 
   237     0417                     T4CON           equ	1047	;# 
   238     041C                     TMR6            equ	1052	;# 
   239     041D                     PR6             equ	1053	;# 
   240     041E                     T6CON           equ	1054	;# 
   241     0FE4                     STATUS_SHAD     equ	4068	;# 
   242     0FE5                     WREG_SHAD       equ	4069	;# 
   243     0FE6                     BSR_SHAD        equ	4070	;# 
   244     0FE7                     PCLATH_SHAD     equ	4071	;# 
   245     0FE8                     FSR0L_SHAD      equ	4072	;# 
   246     0FE9                     FSR0H_SHAD      equ	4073	;# 
   247     0FEA                     FSR1L_SHAD      equ	4074	;# 
   248     0FEB                     FSR1H_SHAD      equ	4075	;# 
   249     0FED                     STKPTR          equ	4077	;# 
   250     0FEE                     TOSL            equ	4078	;# 
   251     0FEF                     TOSH            equ	4079	;# 
   252     0000                     INDF0           equ	0	;# 
   253     0001                     INDF1           equ	1	;# 
   254     0002                     PCL             equ	2	;# 
   255     0003                     STATUS          equ	3	;# 
   256     0004                     FSR0L           equ	4	;# 
   257     0005                     FSR0H           equ	5	;# 
   258     0006                     FSR1L           equ	6	;# 
   259     0007                     FSR1H           equ	7	;# 
   260     0008                     BSR             equ	8	;# 
   261     0009                     WREG            equ	9	;# 
   262     000A                     PCLATH          equ	10	;# 
   263     000B                     INTCON          equ	11	;# 
   264     000C                     PORTA           equ	12	;# 
   265     000D                     PORTB           equ	13	;# 
   266     0011                     PIR1            equ	17	;# 
   267     0012                     PIR2            equ	18	;# 
   268     0013                     PIR3            equ	19	;# 
   269     0014                     PIR4            equ	20	;# 
   270     0015                     TMR0            equ	21	;# 
   271     0016                     TMR1            equ	22	;# 
   272     0016                     TMR1L           equ	22	;# 
   273     0017                     TMR1H           equ	23	;# 
   274     0018                     T1CON           equ	24	;# 
   275     0019                     T1GCON          equ	25	;# 
   276     001A                     TMR2            equ	26	;# 
   277     001B                     PR2             equ	27	;# 
   278     001C                     T2CON           equ	28	;# 
   279     001E                     CPSCON0         equ	30	;# 
   280     001F                     CPSCON1         equ	31	;# 
   281     008C                     TRISA           equ	140	;# 
   282     008D                     TRISB           equ	141	;# 
   283     0091                     PIE1            equ	145	;# 
   284     0092                     PIE2            equ	146	;# 
   285     0093                     PIE3            equ	147	;# 
   286     0094                     PIE4            equ	148	;# 
   287     0095                     OPTION_REG      equ	149	;# 
   288     0096                     PCON            equ	150	;# 
   289     0097                     WDTCON          equ	151	;# 
   290     0098                     OSCTUNE         equ	152	;# 
   291     0099                     OSCCON          equ	153	;# 
   292     009A                     OSCSTAT         equ	154	;# 
   293     009B                     ADRES           equ	155	;# 
   294     009B                     ADRESL          equ	155	;# 
   295     009C                     ADRESH          equ	156	;# 
   296     009D                     ADCON0          equ	157	;# 
   297     009E                     ADCON1          equ	158	;# 
   298     010C                     LATA            equ	268	;# 
   299     010D                     LATB            equ	269	;# 
   300     0111                     CM1CON0         equ	273	;# 
   301     0112                     CM1CON1         equ	274	;# 
   302     0113                     CM2CON0         equ	275	;# 
   303     0114                     CM2CON1         equ	276	;# 
   304     0115                     CMOUT           equ	277	;# 
   305     0116                     BORCON          equ	278	;# 
   306     0117                     FVRCON          equ	279	;# 
   307     0118                     DACCON0         equ	280	;# 
   308     0119                     DACCON1         equ	281	;# 
   309     011A                     SRCON0          equ	282	;# 
   310     011B                     SRCON1          equ	283	;# 
   311     011D                     APFCON0         equ	285	;# 
   312     011E                     APFCON1         equ	286	;# 
   313     018C                     ANSELA          equ	396	;# 
   314     018D                     ANSELB          equ	397	;# 
   315     0191                     EEADR           equ	401	;# 
   316     0191                     EEADRL          equ	401	;# 
   317     0192                     EEADRH          equ	402	;# 
   318     0193                     EEDAT           equ	403	;# 
   319     0193                     EEDATL          equ	403	;# 
   320     0193                     EEDATA          equ	403	;# 
   321     0194                     EEDATH          equ	404	;# 
   322     0195                     EECON1          equ	405	;# 
   323     0196                     EECON2          equ	406	;# 
   324     0199                     RCREG           equ	409	;# 
   325     019A                     TXREG           equ	410	;# 
   326     019B                     SP1BRG          equ	411	;# 
   327     019B                     SP1BRGL         equ	411	;# 
   328     019B                     SPBRG           equ	411	;# 
   329     019B                     SPBRGL          equ	411	;# 
   330     019C                     SP1BRGH         equ	412	;# 
   331     019C                     SPBRGH          equ	412	;# 
   332     019D                     RCSTA           equ	413	;# 
   333     019E                     TXSTA           equ	414	;# 
   334     019F                     BAUDCON         equ	415	;# 
   335     020C                     WPUA            equ	524	;# 
   336     020D                     WPUB            equ	525	;# 
   337     0211                     SSP1BUF         equ	529	;# 
   338     0211                     SSPBUF          equ	529	;# 
   339     0212                     SSP1ADD         equ	530	;# 
   340     0212                     SSPADD          equ	530	;# 
   341     0213                     SSP1MSK         equ	531	;# 
   342     0213                     SSPMSK          equ	531	;# 
   343     0214                     SSP1STAT        equ	532	;# 
   344     0214                     SSPSTAT         equ	532	;# 
   345     0215                     SSP1CON1        equ	533	;# 
   346     0215                     SSPCON1         equ	533	;# 
   347     0215                     SSPCON          equ	533	;# 
   348     0216                     SSP1CON2        equ	534	;# 
   349     0216                     SSPCON2         equ	534	;# 
   350     0217                     SSP1CON3        equ	535	;# 
   351     0217                     SSPCON3         equ	535	;# 
   352     0219                     SSP2BUF         equ	537	;# 
   353     021A                     SSP2ADD         equ	538	;# 
   354     021B                     SSP2MSK         equ	539	;# 
   355     021C                     SSP2STAT        equ	540	;# 
   356     021D                     SSP2CON1        equ	541	;# 
   357     021E                     SSP2CON2        equ	542	;# 
   358     021F                     SSP2CON3        equ	543	;# 
   359     0291                     CCPR1           equ	657	;# 
   360     0291                     CCPR1L          equ	657	;# 
   361     0292                     CCPR1H          equ	658	;# 
   362     0293                     CCP1CON         equ	659	;# 
   363     0294                     PWM1CON         equ	660	;# 
   364     0295                     CCP1AS          equ	661	;# 
   365     0295                     ECCP1AS         equ	661	;# 
   366     0296                     PSTR1CON        equ	662	;# 
   367     0298                     CCPR2           equ	664	;# 
   368     0298                     CCPR2L          equ	664	;# 
   369     0299                     CCPR2H          equ	665	;# 
   370     029A                     CCP2CON         equ	666	;# 
   371     029B                     PWM2CON         equ	667	;# 
   372     029C                     CCP2AS          equ	668	;# 
   373     029C                     ECCP2AS         equ	668	;# 
   374     029D                     PSTR2CON        equ	669	;# 
   375     029E                     CCPTMRS         equ	670	;# 
   376     029E                     CCPTMRS0        equ	670	;# 
   377     0311                     CCPR3           equ	785	;# 
   378     0311                     CCPR3L          equ	785	;# 
   379     0312                     CCPR3H          equ	786	;# 
   380     0313                     CCP3CON         equ	787	;# 
   381     0318                     CCPR4           equ	792	;# 
   382     0318                     CCPR4L          equ	792	;# 
   383     0319                     CCPR4H          equ	793	;# 
   384     031A                     CCP4CON         equ	794	;# 
   385     0394                     IOCBP           equ	916	;# 
   386     0395                     IOCBN           equ	917	;# 
   387     0396                     IOCBF           equ	918	;# 
   388     039A                     CLKRCON         equ	922	;# 
   389     039C                     MDCON           equ	924	;# 
   390     039D                     MDSRC           equ	925	;# 
   391     039E                     MDCARL          equ	926	;# 
   392     039F                     MDCARH          equ	927	;# 
   393     0415                     TMR4            equ	1045	;# 
   394     0416                     PR4             equ	1046	;# 
   395     0417                     T4CON           equ	1047	;# 
   396     041C                     TMR6            equ	1052	;# 
   397     041D                     PR6             equ	1053	;# 
   398     041E                     T6CON           equ	1054	;# 
   399     0FE4                     STATUS_SHAD     equ	4068	;# 
   400     0FE5                     WREG_SHAD       equ	4069	;# 
   401     0FE6                     BSR_SHAD        equ	4070	;# 
   402     0FE7                     PCLATH_SHAD     equ	4071	;# 
   403     0FE8                     FSR0L_SHAD      equ	4072	;# 
   404     0FE9                     FSR0H_SHAD      equ	4073	;# 
   405     0FEA                     FSR1L_SHAD      equ	4074	;# 
   406     0FEB                     FSR1H_SHAD      equ	4075	;# 
   407     0FED                     STKPTR          equ	4077	;# 
   408     0FEE                     TOSL            equ	4078	;# 
   409     0FEF                     TOSH            equ	4079	;# 
   410     0000                     INDF0           equ	0	;# 
   411     0001                     INDF1           equ	1	;# 
   412     0002                     PCL             equ	2	;# 
   413     0003                     STATUS          equ	3	;# 
   414     0004                     FSR0L           equ	4	;# 
   415     0005                     FSR0H           equ	5	;# 
   416     0006                     FSR1L           equ	6	;# 
   417     0007                     FSR1H           equ	7	;# 
   418     0008                     BSR             equ	8	;# 
   419     0009                     WREG            equ	9	;# 
   420     000A                     PCLATH          equ	10	;# 
   421     000B                     INTCON          equ	11	;# 
   422     000C                     PORTA           equ	12	;# 
   423     000D                     PORTB           equ	13	;# 
   424     0011                     PIR1            equ	17	;# 
   425     0012                     PIR2            equ	18	;# 
   426     0013                     PIR3            equ	19	;# 
   427     0014                     PIR4            equ	20	;# 
   428     0015                     TMR0            equ	21	;# 
   429     0016                     TMR1            equ	22	;# 
   430     0016                     TMR1L           equ	22	;# 
   431     0017                     TMR1H           equ	23	;# 
   432     0018                     T1CON           equ	24	;# 
   433     0019                     T1GCON          equ	25	;# 
   434     001A                     TMR2            equ	26	;# 
   435     001B                     PR2             equ	27	;# 
   436     001C                     T2CON           equ	28	;# 
   437     001E                     CPSCON0         equ	30	;# 
   438     001F                     CPSCON1         equ	31	;# 
   439     008C                     TRISA           equ	140	;# 
   440     008D                     TRISB           equ	141	;# 
   441     0091                     PIE1            equ	145	;# 
   442     0092                     PIE2            equ	146	;# 
   443     0093                     PIE3            equ	147	;# 
   444     0094                     PIE4            equ	148	;# 
   445     0095                     OPTION_REG      equ	149	;# 
   446     0096                     PCON            equ	150	;# 
   447     0097                     WDTCON          equ	151	;# 
   448     0098                     OSCTUNE         equ	152	;# 
   449     0099                     OSCCON          equ	153	;# 
   450     009A                     OSCSTAT         equ	154	;# 
   451     009B                     ADRES           equ	155	;# 
   452     009B                     ADRESL          equ	155	;# 
   453     009C                     ADRESH          equ	156	;# 
   454     009D                     ADCON0          equ	157	;# 
   455     009E                     ADCON1          equ	158	;# 
   456     010C                     LATA            equ	268	;# 
   457     010D                     LATB            equ	269	;# 
   458     0111                     CM1CON0         equ	273	;# 
   459     0112                     CM1CON1         equ	274	;# 
   460     0113                     CM2CON0         equ	275	;# 
   461     0114                     CM2CON1         equ	276	;# 
   462     0115                     CMOUT           equ	277	;# 
   463     0116                     BORCON          equ	278	;# 
   464     0117                     FVRCON          equ	279	;# 
   465     0118                     DACCON0         equ	280	;# 
   466     0119                     DACCON1         equ	281	;# 
   467     011A                     SRCON0          equ	282	;# 
   468     011B                     SRCON1          equ	283	;# 
   469     011D                     APFCON0         equ	285	;# 
   470     011E                     APFCON1         equ	286	;# 
   471     018C                     ANSELA          equ	396	;# 
   472     018D                     ANSELB          equ	397	;# 
   473     0191                     EEADR           equ	401	;# 
   474     0191                     EEADRL          equ	401	;# 
   475     0192                     EEADRH          equ	402	;# 
   476     0193                     EEDAT           equ	403	;# 
   477     0193                     EEDATL          equ	403	;# 
   478     0193                     EEDATA          equ	403	;# 
   479     0194                     EEDATH          equ	404	;# 
   480     0195                     EECON1          equ	405	;# 
   481     0196                     EECON2          equ	406	;# 
   482     0199                     RCREG           equ	409	;# 
   483     019A                     TXREG           equ	410	;# 
   484     019B                     SP1BRG          equ	411	;# 
   485     019B                     SP1BRGL         equ	411	;# 
   486     019B                     SPBRG           equ	411	;# 
   487     019B                     SPBRGL          equ	411	;# 
   488     019C                     SP1BRGH         equ	412	;# 
   489     019C                     SPBRGH          equ	412	;# 
   490     019D                     RCSTA           equ	413	;# 
   491     019E                     TXSTA           equ	414	;# 
   492     019F                     BAUDCON         equ	415	;# 
   493     020C                     WPUA            equ	524	;# 
   494     020D                     WPUB            equ	525	;# 
   495     0211                     SSP1BUF         equ	529	;# 
   496     0211                     SSPBUF          equ	529	;# 
   497     0212                     SSP1ADD         equ	530	;# 
   498     0212                     SSPADD          equ	530	;# 
   499     0213                     SSP1MSK         equ	531	;# 
   500     0213                     SSPMSK          equ	531	;# 
   501     0214                     SSP1STAT        equ	532	;# 
   502     0214                     SSPSTAT         equ	532	;# 
   503     0215                     SSP1CON1        equ	533	;# 
   504     0215                     SSPCON1         equ	533	;# 
   505     0215                     SSPCON          equ	533	;# 
   506     0216                     SSP1CON2        equ	534	;# 
   507     0216                     SSPCON2         equ	534	;# 
   508     0217                     SSP1CON3        equ	535	;# 
   509     0217                     SSPCON3         equ	535	;# 
   510     0219                     SSP2BUF         equ	537	;# 
   511     021A                     SSP2ADD         equ	538	;# 
   512     021B                     SSP2MSK         equ	539	;# 
   513     021C                     SSP2STAT        equ	540	;# 
   514     021D                     SSP2CON1        equ	541	;# 
   515     021E                     SSP2CON2        equ	542	;# 
   516     021F                     SSP2CON3        equ	543	;# 
   517     0291                     CCPR1           equ	657	;# 
   518     0291                     CCPR1L          equ	657	;# 
   519     0292                     CCPR1H          equ	658	;# 
   520     0293                     CCP1CON         equ	659	;# 
   521     0294                     PWM1CON         equ	660	;# 
   522     0295                     CCP1AS          equ	661	;# 
   523     0295                     ECCP1AS         equ	661	;# 
   524     0296                     PSTR1CON        equ	662	;# 
   525     0298                     CCPR2           equ	664	;# 
   526     0298                     CCPR2L          equ	664	;# 
   527     0299                     CCPR2H          equ	665	;# 
   528     029A                     CCP2CON         equ	666	;# 
   529     029B                     PWM2CON         equ	667	;# 
   530     029C                     CCP2AS          equ	668	;# 
   531     029C                     ECCP2AS         equ	668	;# 
   532     029D                     PSTR2CON        equ	669	;# 
   533     029E                     CCPTMRS         equ	670	;# 
   534     029E                     CCPTMRS0        equ	670	;# 
   535     0311                     CCPR3           equ	785	;# 
   536     0311                     CCPR3L          equ	785	;# 
   537     0312                     CCPR3H          equ	786	;# 
   538     0313                     CCP3CON         equ	787	;# 
   539     0318                     CCPR4           equ	792	;# 
   540     0318                     CCPR4L          equ	792	;# 
   541     0319                     CCPR4H          equ	793	;# 
   542     031A                     CCP4CON         equ	794	;# 
   543     0394                     IOCBP           equ	916	;# 
   544     0395                     IOCBN           equ	917	;# 
   545     0396                     IOCBF           equ	918	;# 
   546     039A                     CLKRCON         equ	922	;# 
   547     039C                     MDCON           equ	924	;# 
   548     039D                     MDSRC           equ	925	;# 
   549     039E                     MDCARL          equ	926	;# 
   550     039F                     MDCARH          equ	927	;# 
   551     0415                     TMR4            equ	1045	;# 
   552     0416                     PR4             equ	1046	;# 
   553     0417                     T4CON           equ	1047	;# 
   554     041C                     TMR6            equ	1052	;# 
   555     041D                     PR6             equ	1053	;# 
   556     041E                     T6CON           equ	1054	;# 
   557     0FE4                     STATUS_SHAD     equ	4068	;# 
   558     0FE5                     WREG_SHAD       equ	4069	;# 
   559     0FE6                     BSR_SHAD        equ	4070	;# 
   560     0FE7                     PCLATH_SHAD     equ	4071	;# 
   561     0FE8                     FSR0L_SHAD      equ	4072	;# 
   562     0FE9                     FSR0H_SHAD      equ	4073	;# 
   563     0FEA                     FSR1L_SHAD      equ	4074	;# 
   564     0FEB                     FSR1H_SHAD      equ	4075	;# 
   565     0FED                     STKPTR          equ	4077	;# 
   566     0FEE                     TOSL            equ	4078	;# 
   567     0FEF                     TOSH            equ	4079	;# 
   568     0000                     INDF0           equ	0	;# 
   569     0001                     INDF1           equ	1	;# 
   570     0002                     PCL             equ	2	;# 
   571     0003                     STATUS          equ	3	;# 
   572     0004                     FSR0L           equ	4	;# 
   573     0005                     FSR0H           equ	5	;# 
   574     0006                     FSR1L           equ	6	;# 
   575     0007                     FSR1H           equ	7	;# 
   576     0008                     BSR             equ	8	;# 
   577     0009                     WREG            equ	9	;# 
   578     000A                     PCLATH          equ	10	;# 
   579     000B                     INTCON          equ	11	;# 
   580     000C                     PORTA           equ	12	;# 
   581     000D                     PORTB           equ	13	;# 
   582     0011                     PIR1            equ	17	;# 
   583     0012                     PIR2            equ	18	;# 
   584     0013                     PIR3            equ	19	;# 
   585     0014                     PIR4            equ	20	;# 
   586     0015                     TMR0            equ	21	;# 
   587     0016                     TMR1            equ	22	;# 
   588     0016                     TMR1L           equ	22	;# 
   589     0017                     TMR1H           equ	23	;# 
   590     0018                     T1CON           equ	24	;# 
   591     0019                     T1GCON          equ	25	;# 
   592     001A                     TMR2            equ	26	;# 
   593     001B                     PR2             equ	27	;# 
   594     001C                     T2CON           equ	28	;# 
   595     001E                     CPSCON0         equ	30	;# 
   596     001F                     CPSCON1         equ	31	;# 
   597     008C                     TRISA           equ	140	;# 
   598     008D                     TRISB           equ	141	;# 
   599     0091                     PIE1            equ	145	;# 
   600     0092                     PIE2            equ	146	;# 
   601     0093                     PIE3            equ	147	;# 
   602     0094                     PIE4            equ	148	;# 
   603     0095                     OPTION_REG      equ	149	;# 
   604     0096                     PCON            equ	150	;# 
   605     0097                     WDTCON          equ	151	;# 
   606     0098                     OSCTUNE         equ	152	;# 
   607     0099                     OSCCON          equ	153	;# 
   608     009A                     OSCSTAT         equ	154	;# 
   609     009B                     ADRES           equ	155	;# 
   610     009B                     ADRESL          equ	155	;# 
   611     009C                     ADRESH          equ	156	;# 
   612     009D                     ADCON0          equ	157	;# 
   613     009E                     ADCON1          equ	158	;# 
   614     010C                     LATA            equ	268	;# 
   615     010D                     LATB            equ	269	;# 
   616     0111                     CM1CON0         equ	273	;# 
   617     0112                     CM1CON1         equ	274	;# 
   618     0113                     CM2CON0         equ	275	;# 
   619     0114                     CM2CON1         equ	276	;# 
   620     0115                     CMOUT           equ	277	;# 
   621     0116                     BORCON          equ	278	;# 
   622     0117                     FVRCON          equ	279	;# 
   623     0118                     DACCON0         equ	280	;# 
   624     0119                     DACCON1         equ	281	;# 
   625     011A                     SRCON0          equ	282	;# 
   626     011B                     SRCON1          equ	283	;# 
   627     011D                     APFCON0         equ	285	;# 
   628     011E                     APFCON1         equ	286	;# 
   629     018C                     ANSELA          equ	396	;# 
   630     018D                     ANSELB          equ	397	;# 
   631     0191                     EEADR           equ	401	;# 
   632     0191                     EEADRL          equ	401	;# 
   633     0192                     EEADRH          equ	402	;# 
   634     0193                     EEDAT           equ	403	;# 
   635     0193                     EEDATL          equ	403	;# 
   636     0193                     EEDATA          equ	403	;# 
   637     0194                     EEDATH          equ	404	;# 
   638     0195                     EECON1          equ	405	;# 
   639     0196                     EECON2          equ	406	;# 
   640     0199                     RCREG           equ	409	;# 
   641     019A                     TXREG           equ	410	;# 
   642     019B                     SP1BRG          equ	411	;# 
   643     019B                     SP1BRGL         equ	411	;# 
   644     019B                     SPBRG           equ	411	;# 
   645     019B                     SPBRGL          equ	411	;# 
   646     019C                     SP1BRGH         equ	412	;# 
   647     019C                     SPBRGH          equ	412	;# 
   648     019D                     RCSTA           equ	413	;# 
   649     019E                     TXSTA           equ	414	;# 
   650     019F                     BAUDCON         equ	415	;# 
   651     020C                     WPUA            equ	524	;# 
   652     020D                     WPUB            equ	525	;# 
   653     0211                     SSP1BUF         equ	529	;# 
   654     0211                     SSPBUF          equ	529	;# 
   655     0212                     SSP1ADD         equ	530	;# 
   656     0212                     SSPADD          equ	530	;# 
   657     0213                     SSP1MSK         equ	531	;# 
   658     0213                     SSPMSK          equ	531	;# 
   659     0214                     SSP1STAT        equ	532	;# 
   660     0214                     SSPSTAT         equ	532	;# 
   661     0215                     SSP1CON1        equ	533	;# 
   662     0215                     SSPCON1         equ	533	;# 
   663     0215                     SSPCON          equ	533	;# 
   664     0216                     SSP1CON2        equ	534	;# 
   665     0216                     SSPCON2         equ	534	;# 
   666     0217                     SSP1CON3        equ	535	;# 
   667     0217                     SSPCON3         equ	535	;# 
   668     0219                     SSP2BUF         equ	537	;# 
   669     021A                     SSP2ADD         equ	538	;# 
   670     021B                     SSP2MSK         equ	539	;# 
   671     021C                     SSP2STAT        equ	540	;# 
   672     021D                     SSP2CON1        equ	541	;# 
   673     021E                     SSP2CON2        equ	542	;# 
   674     021F                     SSP2CON3        equ	543	;# 
   675     0291                     CCPR1           equ	657	;# 
   676     0291                     CCPR1L          equ	657	;# 
   677     0292                     CCPR1H          equ	658	;# 
   678     0293                     CCP1CON         equ	659	;# 
   679     0294                     PWM1CON         equ	660	;# 
   680     0295                     CCP1AS          equ	661	;# 
   681     0295                     ECCP1AS         equ	661	;# 
   682     0296                     PSTR1CON        equ	662	;# 
   683     0298                     CCPR2           equ	664	;# 
   684     0298                     CCPR2L          equ	664	;# 
   685     0299                     CCPR2H          equ	665	;# 
   686     029A                     CCP2CON         equ	666	;# 
   687     029B                     PWM2CON         equ	667	;# 
   688     029C                     CCP2AS          equ	668	;# 
   689     029C                     ECCP2AS         equ	668	;# 
   690     029D                     PSTR2CON        equ	669	;# 
   691     029E                     CCPTMRS         equ	670	;# 
   692     029E                     CCPTMRS0        equ	670	;# 
   693     0311                     CCPR3           equ	785	;# 
   694     0311                     CCPR3L          equ	785	;# 
   695     0312                     CCPR3H          equ	786	;# 
   696     0313                     CCP3CON         equ	787	;# 
   697     0318                     CCPR4           equ	792	;# 
   698     0318                     CCPR4L          equ	792	;# 
   699     0319                     CCPR4H          equ	793	;# 
   700     031A                     CCP4CON         equ	794	;# 
   701     0394                     IOCBP           equ	916	;# 
   702     0395                     IOCBN           equ	917	;# 
   703     0396                     IOCBF           equ	918	;# 
   704     039A                     CLKRCON         equ	922	;# 
   705     039C                     MDCON           equ	924	;# 
   706     039D                     MDSRC           equ	925	;# 
   707     039E                     MDCARL          equ	926	;# 
   708     039F                     MDCARH          equ	927	;# 
   709     0415                     TMR4            equ	1045	;# 
   710     0416                     PR4             equ	1046	;# 
   711     0417                     T4CON           equ	1047	;# 
   712     041C                     TMR6            equ	1052	;# 
   713     041D                     PR6             equ	1053	;# 
   714     041E                     T6CON           equ	1054	;# 
   715     0FE4                     STATUS_SHAD     equ	4068	;# 
   716     0FE5                     WREG_SHAD       equ	4069	;# 
   717     0FE6                     BSR_SHAD        equ	4070	;# 
   718     0FE7                     PCLATH_SHAD     equ	4071	;# 
   719     0FE8                     FSR0L_SHAD      equ	4072	;# 
   720     0FE9                     FSR0H_SHAD      equ	4073	;# 
   721     0FEA                     FSR1L_SHAD      equ	4074	;# 
   722     0FEB                     FSR1H_SHAD      equ	4075	;# 
   723     0FED                     STKPTR          equ	4077	;# 
   724     0FEE                     TOSL            equ	4078	;# 
   725     0FEF                     TOSH            equ	4079	;# 
   726     0000                     INDF0           equ	0	;# 
   727     0001                     INDF1           equ	1	;# 
   728     0002                     PCL             equ	2	;# 
   729     0003                     STATUS          equ	3	;# 
   730     0004                     FSR0L           equ	4	;# 
   731     0005                     FSR0H           equ	5	;# 
   732     0006                     FSR1L           equ	6	;# 
   733     0007                     FSR1H           equ	7	;# 
   734     0008                     BSR             equ	8	;# 
   735     0009                     WREG            equ	9	;# 
   736     000A                     PCLATH          equ	10	;# 
   737     000B                     INTCON          equ	11	;# 
   738     000C                     PORTA           equ	12	;# 
   739     000D                     PORTB           equ	13	;# 
   740     0011                     PIR1            equ	17	;# 
   741     0012                     PIR2            equ	18	;# 
   742     0013                     PIR3            equ	19	;# 
   743     0014                     PIR4            equ	20	;# 
   744     0015                     TMR0            equ	21	;# 
   745     0016                     TMR1            equ	22	;# 
   746     0016                     TMR1L           equ	22	;# 
   747     0017                     TMR1H           equ	23	;# 
   748     0018                     T1CON           equ	24	;# 
   749     0019                     T1GCON          equ	25	;# 
   750     001A                     TMR2            equ	26	;# 
   751     001B                     PR2             equ	27	;# 
   752     001C                     T2CON           equ	28	;# 
   753     001E                     CPSCON0         equ	30	;# 
   754     001F                     CPSCON1         equ	31	;# 
   755     008C                     TRISA           equ	140	;# 
   756     008D                     TRISB           equ	141	;# 
   757     0091                     PIE1            equ	145	;# 
   758     0092                     PIE2            equ	146	;# 
   759     0093                     PIE3            equ	147	;# 
   760     0094                     PIE4            equ	148	;# 
   761     0095                     OPTION_REG      equ	149	;# 
   762     0096                     PCON            equ	150	;# 
   763     0097                     WDTCON          equ	151	;# 
   764     0098                     OSCTUNE         equ	152	;# 
   765     0099                     OSCCON          equ	153	;# 
   766     009A                     OSCSTAT         equ	154	;# 
   767     009B                     ADRES           equ	155	;# 
   768     009B                     ADRESL          equ	155	;# 
   769     009C                     ADRESH          equ	156	;# 
   770     009D                     ADCON0          equ	157	;# 
   771     009E                     ADCON1          equ	158	;# 
   772     010C                     LATA            equ	268	;# 
   773     010D                     LATB            equ	269	;# 
   774     0111                     CM1CON0         equ	273	;# 
   775     0112                     CM1CON1         equ	274	;# 
   776     0113                     CM2CON0         equ	275	;# 
   777     0114                     CM2CON1         equ	276	;# 
   778     0115                     CMOUT           equ	277	;# 
   779     0116                     BORCON          equ	278	;# 
   780     0117                     FVRCON          equ	279	;# 
   781     0118                     DACCON0         equ	280	;# 
   782     0119                     DACCON1         equ	281	;# 
   783     011A                     SRCON0          equ	282	;# 
   784     011B                     SRCON1          equ	283	;# 
   785     011D                     APFCON0         equ	285	;# 
   786     011E                     APFCON1         equ	286	;# 
   787     018C                     ANSELA          equ	396	;# 
   788     018D                     ANSELB          equ	397	;# 
   789     0191                     EEADR           equ	401	;# 
   790     0191                     EEADRL          equ	401	;# 
   791     0192                     EEADRH          equ	402	;# 
   792     0193                     EEDAT           equ	403	;# 
   793     0193                     EEDATL          equ	403	;# 
   794     0193                     EEDATA          equ	403	;# 
   795     0194                     EEDATH          equ	404	;# 
   796     0195                     EECON1          equ	405	;# 
   797     0196                     EECON2          equ	406	;# 
   798     0199                     RCREG           equ	409	;# 
   799     019A                     TXREG           equ	410	;# 
   800     019B                     SP1BRG          equ	411	;# 
   801     019B                     SP1BRGL         equ	411	;# 
   802     019B                     SPBRG           equ	411	;# 
   803     019B                     SPBRGL          equ	411	;# 
   804     019C                     SP1BRGH         equ	412	;# 
   805     019C                     SPBRGH          equ	412	;# 
   806     019D                     RCSTA           equ	413	;# 
   807     019E                     TXSTA           equ	414	;# 
   808     019F                     BAUDCON         equ	415	;# 
   809     020C                     WPUA            equ	524	;# 
   810     020D                     WPUB            equ	525	;# 
   811     0211                     SSP1BUF         equ	529	;# 
   812     0211                     SSPBUF          equ	529	;# 
   813     0212                     SSP1ADD         equ	530	;# 
   814     0212                     SSPADD          equ	530	;# 
   815     0213                     SSP1MSK         equ	531	;# 
   816     0213                     SSPMSK          equ	531	;# 
   817     0214                     SSP1STAT        equ	532	;# 
   818     0214                     SSPSTAT         equ	532	;# 
   819     0215                     SSP1CON1        equ	533	;# 
   820     0215                     SSPCON1         equ	533	;# 
   821     0215                     SSPCON          equ	533	;# 
   822     0216                     SSP1CON2        equ	534	;# 
   823     0216                     SSPCON2         equ	534	;# 
   824     0217                     SSP1CON3        equ	535	;# 
   825     0217                     SSPCON3         equ	535	;# 
   826     0219                     SSP2BUF         equ	537	;# 
   827     021A                     SSP2ADD         equ	538	;# 
   828     021B                     SSP2MSK         equ	539	;# 
   829     021C                     SSP2STAT        equ	540	;# 
   830     021D                     SSP2CON1        equ	541	;# 
   831     021E                     SSP2CON2        equ	542	;# 
   832     021F                     SSP2CON3        equ	543	;# 
   833     0291                     CCPR1           equ	657	;# 
   834     0291                     CCPR1L          equ	657	;# 
   835     0292                     CCPR1H          equ	658	;# 
   836     0293                     CCP1CON         equ	659	;# 
   837     0294                     PWM1CON         equ	660	;# 
   838     0295                     CCP1AS          equ	661	;# 
   839     0295                     ECCP1AS         equ	661	;# 
   840     0296                     PSTR1CON        equ	662	;# 
   841     0298                     CCPR2           equ	664	;# 
   842     0298                     CCPR2L          equ	664	;# 
   843     0299                     CCPR2H          equ	665	;# 
   844     029A                     CCP2CON         equ	666	;# 
   845     029B                     PWM2CON         equ	667	;# 
   846     029C                     CCP2AS          equ	668	;# 
   847     029C                     ECCP2AS         equ	668	;# 
   848     029D                     PSTR2CON        equ	669	;# 
   849     029E                     CCPTMRS         equ	670	;# 
   850     029E                     CCPTMRS0        equ	670	;# 
   851     0311                     CCPR3           equ	785	;# 
   852     0311                     CCPR3L          equ	785	;# 
   853     0312                     CCPR3H          equ	786	;# 
   854     0313                     CCP3CON         equ	787	;# 
   855     0318                     CCPR4           equ	792	;# 
   856     0318                     CCPR4L          equ	792	;# 
   857     0319                     CCPR4H          equ	793	;# 
   858     031A                     CCP4CON         equ	794	;# 
   859     0394                     IOCBP           equ	916	;# 
   860     0395                     IOCBN           equ	917	;# 
   861     0396                     IOCBF           equ	918	;# 
   862     039A                     CLKRCON         equ	922	;# 
   863     039C                     MDCON           equ	924	;# 
   864     039D                     MDSRC           equ	925	;# 
   865     039E                     MDCARL          equ	926	;# 
   866     039F                     MDCARH          equ	927	;# 
   867     0415                     TMR4            equ	1045	;# 
   868     0416                     PR4             equ	1046	;# 
   869     0417                     T4CON           equ	1047	;# 
   870     041C                     TMR6            equ	1052	;# 
   871     041D                     PR6             equ	1053	;# 
   872     041E                     T6CON           equ	1054	;# 
   873     0FE4                     STATUS_SHAD     equ	4068	;# 
   874     0FE5                     WREG_SHAD       equ	4069	;# 
   875     0FE6                     BSR_SHAD        equ	4070	;# 
   876     0FE7                     PCLATH_SHAD     equ	4071	;# 
   877     0FE8                     FSR0L_SHAD      equ	4072	;# 
   878     0FE9                     FSR0H_SHAD      equ	4073	;# 
   879     0FEA                     FSR1L_SHAD      equ	4074	;# 
   880     0FEB                     FSR1H_SHAD      equ	4075	;# 
   881     0FED                     STKPTR          equ	4077	;# 
   882     0FEE                     TOSL            equ	4078	;# 
   883     0FEF                     TOSH            equ	4079	;# 
   884     0000                     INDF0           equ	0	;# 
   885     0001                     INDF1           equ	1	;# 
   886     0002                     PCL             equ	2	;# 
   887     0003                     STATUS          equ	3	;# 
   888     0004                     FSR0L           equ	4	;# 
   889     0005                     FSR0H           equ	5	;# 
   890     0006                     FSR1L           equ	6	;# 
   891     0007                     FSR1H           equ	7	;# 
   892     0008                     BSR             equ	8	;# 
   893     0009                     WREG            equ	9	;# 
   894     000A                     PCLATH          equ	10	;# 
   895     000B                     INTCON          equ	11	;# 
   896     000C                     PORTA           equ	12	;# 
   897     000D                     PORTB           equ	13	;# 
   898     0011                     PIR1            equ	17	;# 
   899     0012                     PIR2            equ	18	;# 
   900     0013                     PIR3            equ	19	;# 
   901     0014                     PIR4            equ	20	;# 
   902     0015                     TMR0            equ	21	;# 
   903     0016                     TMR1            equ	22	;# 
   904     0016                     TMR1L           equ	22	;# 
   905     0017                     TMR1H           equ	23	;# 
   906     0018                     T1CON           equ	24	;# 
   907     0019                     T1GCON          equ	25	;# 
   908     001A                     TMR2            equ	26	;# 
   909     001B                     PR2             equ	27	;# 
   910     001C                     T2CON           equ	28	;# 
   911     001E                     CPSCON0         equ	30	;# 
   912     001F                     CPSCON1         equ	31	;# 
   913     008C                     TRISA           equ	140	;# 
   914     008D                     TRISB           equ	141	;# 
   915     0091                     PIE1            equ	145	;# 
   916     0092                     PIE2            equ	146	;# 
   917     0093                     PIE3            equ	147	;# 
   918     0094                     PIE4            equ	148	;# 
   919     0095                     OPTION_REG      equ	149	;# 
   920     0096                     PCON            equ	150	;# 
   921     0097                     WDTCON          equ	151	;# 
   922     0098                     OSCTUNE         equ	152	;# 
   923     0099                     OSCCON          equ	153	;# 
   924     009A                     OSCSTAT         equ	154	;# 
   925     009B                     ADRES           equ	155	;# 
   926     009B                     ADRESL          equ	155	;# 
   927     009C                     ADRESH          equ	156	;# 
   928     009D                     ADCON0          equ	157	;# 
   929     009E                     ADCON1          equ	158	;# 
   930     010C                     LATA            equ	268	;# 
   931     010D                     LATB            equ	269	;# 
   932     0111                     CM1CON0         equ	273	;# 
   933     0112                     CM1CON1         equ	274	;# 
   934     0113                     CM2CON0         equ	275	;# 
   935     0114                     CM2CON1         equ	276	;# 
   936     0115                     CMOUT           equ	277	;# 
   937     0116                     BORCON          equ	278	;# 
   938     0117                     FVRCON          equ	279	;# 
   939     0118                     DACCON0         equ	280	;# 
   940     0119                     DACCON1         equ	281	;# 
   941     011A                     SRCON0          equ	282	;# 
   942     011B                     SRCON1          equ	283	;# 
   943     011D                     APFCON0         equ	285	;# 
   944     011E                     APFCON1         equ	286	;# 
   945     018C                     ANSELA          equ	396	;# 
   946     018D                     ANSELB          equ	397	;# 
   947     0191                     EEADR           equ	401	;# 
   948     0191                     EEADRL          equ	401	;# 
   949     0192                     EEADRH          equ	402	;# 
   950     0193                     EEDAT           equ	403	;# 
   951     0193                     EEDATL          equ	403	;# 
   952     0193                     EEDATA          equ	403	;# 
   953     0194                     EEDATH          equ	404	;# 
   954     0195                     EECON1          equ	405	;# 
   955     0196                     EECON2          equ	406	;# 
   956     0199                     RCREG           equ	409	;# 
   957     019A                     TXREG           equ	410	;# 
   958     019B                     SP1BRG          equ	411	;# 
   959     019B                     SP1BRGL         equ	411	;# 
   960     019B                     SPBRG           equ	411	;# 
   961     019B                     SPBRGL          equ	411	;# 
   962     019C                     SP1BRGH         equ	412	;# 
   963     019C                     SPBRGH          equ	412	;# 
   964     019D                     RCSTA           equ	413	;# 
   965     019E                     TXSTA           equ	414	;# 
   966     019F                     BAUDCON         equ	415	;# 
   967     020C                     WPUA            equ	524	;# 
   968     020D                     WPUB            equ	525	;# 
   969     0211                     SSP1BUF         equ	529	;# 
   970     0211                     SSPBUF          equ	529	;# 
   971     0212                     SSP1ADD         equ	530	;# 
   972     0212                     SSPADD          equ	530	;# 
   973     0213                     SSP1MSK         equ	531	;# 
   974     0213                     SSPMSK          equ	531	;# 
   975     0214                     SSP1STAT        equ	532	;# 
   976     0214                     SSPSTAT         equ	532	;# 
   977     0215                     SSP1CON1        equ	533	;# 
   978     0215                     SSPCON1         equ	533	;# 
   979     0215                     SSPCON          equ	533	;# 
   980     0216                     SSP1CON2        equ	534	;# 
   981     0216                     SSPCON2         equ	534	;# 
   982     0217                     SSP1CON3        equ	535	;# 
   983     0217                     SSPCON3         equ	535	;# 
   984     0219                     SSP2BUF         equ	537	;# 
   985     021A                     SSP2ADD         equ	538	;# 
   986     021B                     SSP2MSK         equ	539	;# 
   987     021C                     SSP2STAT        equ	540	;# 
   988     021D                     SSP2CON1        equ	541	;# 
   989     021E                     SSP2CON2        equ	542	;# 
   990     021F                     SSP2CON3        equ	543	;# 
   991     0291                     CCPR1           equ	657	;# 
   992     0291                     CCPR1L          equ	657	;# 
   993     0292                     CCPR1H          equ	658	;# 
   994     0293                     CCP1CON         equ	659	;# 
   995     0294                     PWM1CON         equ	660	;# 
   996     0295                     CCP1AS          equ	661	;# 
   997     0295                     ECCP1AS         equ	661	;# 
   998     0296                     PSTR1CON        equ	662	;# 
   999     0298                     CCPR2           equ	664	;# 
  1000     0298                     CCPR2L          equ	664	;# 
  1001     0299                     CCPR2H          equ	665	;# 
  1002     029A                     CCP2CON         equ	666	;# 
  1003     029B                     PWM2CON         equ	667	;# 
  1004     029C                     CCP2AS          equ	668	;# 
  1005     029C                     ECCP2AS         equ	668	;# 
  1006     029D                     PSTR2CON        equ	669	;# 
  1007     029E                     CCPTMRS         equ	670	;# 
  1008     029E                     CCPTMRS0        equ	670	;# 
  1009     0311                     CCPR3           equ	785	;# 
  1010     0311                     CCPR3L          equ	785	;# 
  1011     0312                     CCPR3H          equ	786	;# 
  1012     0313                     CCP3CON         equ	787	;# 
  1013     0318                     CCPR4           equ	792	;# 
  1014     0318                     CCPR4L          equ	792	;# 
  1015     0319                     CCPR4H          equ	793	;# 
  1016     031A                     CCP4CON         equ	794	;# 
  1017     0394                     IOCBP           equ	916	;# 
  1018     0395                     IOCBN           equ	917	;# 
  1019     0396                     IOCBF           equ	918	;# 
  1020     039A                     CLKRCON         equ	922	;# 
  1021     039C                     MDCON           equ	924	;# 
  1022     039D                     MDSRC           equ	925	;# 
  1023     039E                     MDCARL          equ	926	;# 
  1024     039F                     MDCARH          equ	927	;# 
  1025     0415                     TMR4            equ	1045	;# 
  1026     0416                     PR4             equ	1046	;# 
  1027     0417                     T4CON           equ	1047	;# 
  1028     041C                     TMR6            equ	1052	;# 
  1029     041D                     PR6             equ	1053	;# 
  1030     041E                     T6CON           equ	1054	;# 
  1031     0FE4                     STATUS_SHAD     equ	4068	;# 
  1032     0FE5                     WREG_SHAD       equ	4069	;# 
  1033     0FE6                     BSR_SHAD        equ	4070	;# 
  1034     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1035     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1036     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1037     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1038     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1039     0FED                     STKPTR          equ	4077	;# 
  1040     0FEE                     TOSL            equ	4078	;# 
  1041     0FEF                     TOSH            equ	4079	;# 
  1042                           
  1043 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1044     0000                     _EUSART_DefaultFramingErrorHandler equ	0
  1045                           
  1046 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1047     0000                     _EUSART_DefaultOverrunErrorHandler equ	0
  1048                           
  1049 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1050     0000                     _EUSART_DefaultErrorHandler equ	0
  1051                           
  1052                           	psect	stringtext1
  1053     0800                     __pstringtext1:
  1054     0800                     _mensagem0:
  1055     0800  344C               	retlw	76
  1056     0801  342D               	retlw	45
  1057     0802  3445               	retlw	69
  1058     0803  3478               	retlw	120
  1059     0804  3469               	retlw	105
  1060     0805  3462               	retlw	98
  1061     0806  3465               	retlw	101
  1062     0807  3420               	retlw	32
  1063     0808  346C               	retlw	108
  1064     0809  3469               	retlw	105
  1065     080A  3473               	retlw	115
  1066     080B  3474               	retlw	116
  1067     080C  3461               	retlw	97
  1068     080D  342C               	retlw	44
  1069     080E  3420               	retlw	32
  1070     080F  3441               	retlw	65
  1071     0810  342D               	retlw	45
  1072     0811  3441               	retlw	65
  1073     0812  3467               	retlw	103
  1074     0813  3465               	retlw	101
  1075     0814  346E               	retlw	110
  1076     0815  3464               	retlw	100
  1077     0816  3461               	retlw	97
  1078     0817  342C               	retlw	44
  1079     0818  3420               	retlw	32
  1080     0819  3450               	retlw	80
  1081     081A  342D               	retlw	45
  1082     081B  3450               	retlw	80
  1083     081C  3472               	retlw	114
  1084     081D  346F               	retlw	111
  1085     081E  3478               	retlw	120
  1086     081F  3469               	retlw	105
  1087     0820  346D               	retlw	109
  1088     0821  346F               	retlw	111
  1089     0822  342C               	retlw	44
  1090     0823  3420               	retlw	32
  1091     0824  3452               	retlw	82
  1092     0825  342D               	retlw	45
  1093     0826  3441               	retlw	65
  1094     0827  3470               	retlw	112
  1095     0828  3461               	retlw	97
  1096     0829  3467               	retlw	103
  1097     082A  3461               	retlw	97
  1098     082B  3420               	retlw	32
  1099     082C  346C               	retlw	108
  1100     082D  3469               	retlw	105
  1101     082E  3473               	retlw	115
  1102     082F  3474               	retlw	116
  1103     0830  3461               	retlw	97
  1104     0831  3400               	retlw	0
  1105     0832                     __end_of_mensagem0:
  1106                           
  1107                           	psect	stringtext2
  1108     0832                     __pstringtext2:
  1109     0832                     _mensagem6:
  1110     0832  3454               	retlw	84
  1111     0833  346F               	retlw	111
  1112     0834  3464               	retlw	100
  1113     0835  346F               	retlw	111
  1114     0836  3473               	retlw	115
  1115     0837  3420               	retlw	32
  1116     0838  346F               	retlw	111
  1117     0839  3473               	retlw	115
  1118     083A  3420               	retlw	32
  1119     083B  3461               	retlw	97
  1120     083C  3467               	retlw	103
  1121     083D  3465               	retlw	101
  1122     083E  346E               	retlw	110
  1123     083F  3464               	retlw	100
  1124     0840  3461               	retlw	97
  1125     0841  346D               	retlw	109
  1126     0842  3465               	retlw	101
  1127     0843  346E               	retlw	110
  1128     0844  3474               	retlw	116
  1129     0845  346F               	retlw	111
  1130     0846  3473               	retlw	115
  1131     0847  3420               	retlw	32
  1132     0848  3466               	retlw	102
  1133     0849  346F               	retlw	111
  1134     084A  3472               	retlw	114
  1135     084B  3461               	retlw	97
  1136     084C  346D               	retlw	109
  1137     084D  3420               	retlw	32
  1138     084E  3461               	retlw	97
  1139     084F  3474               	retlw	116
  1140     0850  3465               	retlw	101
  1141     0851  346E               	retlw	110
  1142     0852  3464               	retlw	100
  1143     0853  3469               	retlw	105
  1144     0854  3464               	retlw	100
  1145     0855  346F               	retlw	111
  1146     0856  3473               	retlw	115
  1147     0857  3400               	retlw	0
  1148     0858                     __end_of_mensagem6:
  1149                           
  1150                           	psect	stringtext3
  1151     0858                     __pstringtext3:
  1152     0858                     _mensagem5:
  1153     0858  344E               	retlw	78
  1154     0859  3461               	retlw	97
  1155     085A  346F               	retlw	111
  1156     085B  3420               	retlw	32
  1157     085C  3466               	retlw	102
  1158     085D  346F               	retlw	111
  1159     085E  3469               	retlw	105
  1160     085F  3420               	retlw	32
  1161     0860  3470               	retlw	112
  1162     0861  346F               	retlw	111
  1163     0862  3473               	retlw	115
  1164     0863  3473               	retlw	115
  1165     0864  3469               	retlw	105
  1166     0865  3476               	retlw	118
  1167     0866  3465               	retlw	101
  1168     0867  346C               	retlw	108
  1169     0868  3420               	retlw	32
  1170     0869  3461               	retlw	97
  1171     086A  3467               	retlw	103
  1172     086B  3465               	retlw	101
  1173     086C  346E               	retlw	110
  1174     086D  3464               	retlw	100
  1175     086E  3461               	retlw	97
  1176     086F  3472               	retlw	114
  1177     0870  3420               	retlw	32
  1178     0871  3428               	retlw	40
  1179     0872  346E               	retlw	110
  1180     0873  346F               	retlw	111
  1181     0874  346D               	retlw	109
  1182     0875  3465               	retlw	101
  1183     0876  3420               	retlw	32
  1184     0877  3476               	retlw	118
  1185     0878  3461               	retlw	97
  1186     0879  347A               	retlw	122
  1187     087A  3469               	retlw	105
  1188     087B  346F               	retlw	111
  1189     087C  3429               	retlw	41
  1190     087D  3400               	retlw	0
  1191     087E                     __end_of_mensagem5:
  1192                           
  1193                           	psect	stringtext4
  1194     087E                     __pstringtext4:
  1195     087E                     _mensagem7:
  1196     087E  344E               	retlw	78
  1197     087F  3461               	retlw	97
  1198     0880  346F               	retlw	111
  1199     0881  3420               	retlw	32
  1200     0882  3464               	retlw	100
  1201     0883  3469               	retlw	105
  1202     0884  3473               	retlw	115
  1203     0885  3470               	retlw	112
  1204     0886  346F               	retlw	111
  1205     0887  346D               	retlw	109
  1206     0888  346F               	retlw	111
  1207     0889  3473               	retlw	115
  1208     088A  3420               	retlw	32
  1209     088B  3464               	retlw	100
  1210     088C  3465               	retlw	101
  1211     088D  3420               	retlw	32
  1212     088E  346D               	retlw	109
  1213     088F  3461               	retlw	97
  1214     0890  3469               	retlw	105
  1215     0891  3473               	retlw	115
  1216     0892  3420               	retlw	32
  1217     0893  3461               	retlw	97
  1218     0894  3467               	retlw	103
  1219     0895  3465               	retlw	101
  1220     0896  346E               	retlw	110
  1221     0897  3464               	retlw	100
  1222     0898  3461               	retlw	97
  1223     0899  346D               	retlw	109
  1224     089A  3465               	retlw	101
  1225     089B  346E               	retlw	110
  1226     089C  3474               	retlw	116
  1227     089D  346F               	retlw	111
  1228     089E  3473               	retlw	115
  1229     089F  3400               	retlw	0
  1230     08A0                     __end_of_mensagem7:
  1231                           
  1232                           	psect	stringtext5
  1233     08A0                     __pstringtext5:
  1234     08A0                     _mensagem2:
  1235     08A0  344C               	retlw	76
  1236     08A1  3469               	retlw	105
  1237     08A2  3473               	retlw	115
  1238     08A3  3474               	retlw	116
  1239     08A4  3461               	retlw	97
  1240     08A5  3420               	retlw	32
  1241     08A6  3464               	retlw	100
  1242     08A7  3465               	retlw	101
  1243     08A8  3420               	retlw	32
  1244     08A9  3461               	retlw	97
  1245     08AA  3467               	retlw	103
  1246     08AB  3465               	retlw	101
  1247     08AC  346E               	retlw	110
  1248     08AD  3464               	retlw	100
  1249     08AE  3461               	retlw	97
  1250     08AF  346D               	retlw	109
  1251     08B0  3465               	retlw	101
  1252     08B1  346E               	retlw	110
  1253     08B2  3474               	retlw	116
  1254     08B3  346F               	retlw	111
  1255     08B4  3473               	retlw	115
  1256     08B5  3420               	retlw	32
  1257     08B6  3476               	retlw	118
  1258     08B7  3461               	retlw	97
  1259     08B8  347A               	retlw	122
  1260     08B9  3469               	retlw	105
  1261     08BA  3461               	retlw	97
  1262     08BB  3400               	retlw	0
  1263     08BC                     __end_of_mensagem2:
  1264                           
  1265                           	psect	stringtext6
  1266     08BC                     __pstringtext6:
  1267     08BC                     _mensagem8:
  1268     08BC  3441               	retlw	65
  1269     08BD  3467               	retlw	103
  1270     08BE  3465               	retlw	101
  1271     08BF  346E               	retlw	110
  1272     08C0  3464               	retlw	100
  1273     08C1  3461               	retlw	97
  1274     08C2  346D               	retlw	109
  1275     08C3  3465               	retlw	101
  1276     08C4  346E               	retlw	110
  1277     08C5  3474               	retlw	116
  1278     08C6  346F               	retlw	111
  1279     08C7  3420               	retlw	32
  1280     08C8  3472               	retlw	114
  1281     08C9  3465               	retlw	101
  1282     08CA  3461               	retlw	97
  1283     08CB  346C               	retlw	108
  1284     08CC  3469               	retlw	105
  1285     08CD  347A               	retlw	122
  1286     08CE  3461               	retlw	97
  1287     08CF  3464               	retlw	100
  1288     08D0  346F               	retlw	111
  1289     08D1  3400               	retlw	0
  1290     08D2                     __end_of_mensagem8:
  1291                           
  1292                           	psect	stringtext7
  1293     08D2                     __pstringtext7:
  1294     08D2                     _mensagem1:
  1295     08D2  344C               	retlw	76
  1296     08D3  3469               	retlw	105
  1297     08D4  3473               	retlw	115
  1298     08D5  3474               	retlw	116
  1299     08D6  3461               	retlw	97
  1300     08D7  3420               	retlw	32
  1301     08D8  3464               	retlw	100
  1302     08D9  3465               	retlw	101
  1303     08DA  3420               	retlw	32
  1304     08DB  3461               	retlw	97
  1305     08DC  3467               	retlw	103
  1306     08DD  3465               	retlw	101
  1307     08DE  346E               	retlw	110
  1308     08DF  3464               	retlw	100
  1309     08E0  3461               	retlw	97
  1310     08E1  346D               	retlw	109
  1311     08E2  3465               	retlw	101
  1312     08E3  346E               	retlw	110
  1313     08E4  3474               	retlw	116
  1314     08E5  346F               	retlw	111
  1315     08E6  3473               	retlw	115
  1316     08E7  3400               	retlw	0
  1317     08E8                     __end_of_mensagem1:
  1318                           
  1319                           	psect	stringtext8
  1320     08E8                     __pstringtext8:
  1321     08E8                     _mensagem4:
  1322     08E8  3444               	retlw	68
  1323     08E9  3469               	retlw	105
  1324     08EA  3467               	retlw	103
  1325     08EB  3469               	retlw	105
  1326     08EC  3474               	retlw	116
  1327     08ED  3465               	retlw	101
  1328     08EE  3420               	retlw	32
  1329     08EF  346F               	retlw	111
  1330     08F0  3420               	retlw	32
  1331     08F1  346E               	retlw	110
  1332     08F2  346F               	retlw	111
  1333     08F3  346D               	retlw	109
  1334     08F4  3465               	retlw	101
  1335     08F5  343A               	retlw	58
  1336     08F6  3400               	retlw	0
  1337     08F7                     __end_of_mensagem4:
  1338                           
  1339                           	psect	stringtext9
  1340     08F7                     __pstringtext9:
  1341     08F7                     _mensagem3:
  1342     08F7  3450               	retlw	80
  1343     08F8  3472               	retlw	114
  1344     08F9  346F               	retlw	111
  1345     08FA  3478               	retlw	120
  1346     08FB  3469               	retlw	105
  1347     08FC  346D               	retlw	109
  1348     08FD  346F               	retlw	111
  1349     08FE  343A               	retlw	58
  1350     08FF  3400               	retlw	0
  1351     0900                     __end_of_mensagem3:
  1352     0003                     _STATUSbits     set	3
  1353     000B                     _INTCONbits     set	11
  1354     0011                     _PIR1bits       set	17
  1355     0095                     _OPTION_REGbits set	149
  1356     008D                     _TRISB          set	141
  1357     008C                     _TRISA          set	140
  1358     0097                     _WDTCON         set	151
  1359     0098                     _OSCTUNE        set	152
  1360     0099                     _OSCCON         set	153
  1361     04D6                     _PLLR           set	1238
  1362     011E                     _APFCON1        set	286
  1363     011D                     _APFCON0        set	285
  1364     010D                     _LATB           set	269
  1365     010C                     _LATA           set	268
  1366     0116                     _BORCON         set	278
  1367     0191                     _EEADR          set	401
  1368     0193                     _EEDATA         set	403
  1369     0195                     _EECON1         set	405
  1370     018C                     _ANSELA         set	396
  1371     018D                     _ANSELB         set	397
  1372     0196                     _EECON2         set	406
  1373     0193                     _EEDATL         set	403
  1374     0194                     _EEDATH         set	404
  1375     0195                     _EECON1bits     set	405
  1376     0192                     _EEADRH         set	402
  1377     0191                     _EEADRL         set	401
  1378     019A                     _TXREG          set	410
  1379     0199                     _RCREG          set	409
  1380     019D                     _RCSTAbits      set	413
  1381     019E                     _TXSTAbits      set	414
  1382     019C                     _SPBRGH         set	412
  1383     019B                     _SPBRGL         set	411
  1384     019E                     _TXSTA          set	414
  1385     019D                     _RCSTA          set	413
  1386     019F                     _BAUDCON        set	415
  1387     020C                     _WPUA           set	524
  1388     020D                     _WPUB           set	525
  1389                           
  1390                           	psect	cinit
  1391     07F4                     start_initialization:	
  1392                           ; #config settings
  1393                           
  1394     07F4                     __initialization:
  1395                           
  1396                           ; Clear objects allocated to COMMON
  1397     07F4  01FD               	clrf	__pbssCOMMON& (0+127)
  1398                           
  1399                           ; Clear objects allocated to BANK0
  1400     07F5  3020               	movlw	low __pbssBANK0
  1401     07F6  0084               	movwf	4
  1402     07F7  3000               	movlw	high __pbssBANK0
  1403     07F8  0085               	movwf	5
  1404     07F9  3021               	movlw	33
  1405     07FA  3184  2452  3187   	fcall	clear_ram0
  1406     07FD                     end_of_initialization:	
  1407                           ;End of C runtime variable initialization code
  1408                           
  1409     07FD                     __end_of__initialization:
  1410     07FD  0020               	movlb	0
  1411     07FE  3185  2D66         	ljmp	_main	;jump to C main() function
  1412                           
  1413                           	psect	bssCOMMON
  1414     007D                     __pbssCOMMON:
  1415     007D                     _c_Rx:
  1416     007D                     	ds	1
  1417                           
  1418                           	psect	bssBANK0
  1419     0020                     __pbssBANK0:
  1420     0020                     armazenarNome@buffer_nome:
  1421     0020                     	ds	21
  1422     0035                     _EUSART_ErrorHandler:
  1423     0035                     	ds	2
  1424     0037                     _EUSART_OverrunErrorHandler:
  1425     0037                     	ds	2
  1426     0039                     _EUSART_FramingErrorHandler:
  1427     0039                     	ds	2
  1428     003B                     _verificar:
  1429     003B                     	ds	1
  1430     003C                     _nomes:
  1431     003C                     	ds	1
  1432     003D                     _nome_nulo:
  1433     003D                     	ds	1
  1434     003E                     _countNome:
  1435     003E                     	ds	1
  1436     003F                     _comando:
  1437     003F                     	ds	1
  1438     0040                     _eusartRxLastError:
  1439     0040                     	ds	1
  1440                           
  1441                           	psect	bssEEDATA
  1442     0000                     __pbssEEDATA:
  1443     0000                     _listaclientes:
  1444     0000  0000               	db	0
  1445     0001  0000               	db	0
  1446     0002  0000               	db	0
  1447     0003  0000               	db	0
  1448     0004  0000               	db	0
  1449     0005  0000               	db	0
  1450     0006  0000               	db	0
  1451     0007  0000               	db	0
  1452     0008  0000               	db	0
  1453     0009  0000               	db	0
  1454     000A  0000               	db	0
  1455     000B  0000               	db	0
  1456     000C  0000               	db	0
  1457     000D  0000               	db	0
  1458     000E  0000               	db	0
  1459     000F  0000               	db	0
  1460     0010  0000               	db	0
  1461     0011  0000               	db	0
  1462     0012  0000               	db	0
  1463     0013  0000               	db	0
  1464     0014  0000               	db	0
  1465     0015  0000               	db	0
  1466     0016  0000               	db	0
  1467     0017  0000               	db	0
  1468     0018  0000               	db	0
  1469     0019  0000               	db	0
  1470     001A  0000               	db	0
  1471     001B  0000               	db	0
  1472     001C  0000               	db	0
  1473     001D  0000               	db	0
  1474     001E  0000               	db	0
  1475     001F  0000               	db	0
  1476     0020  0000               	db	0
  1477     0021  0000               	db	0
  1478     0022  0000               	db	0
  1479     0023  0000               	db	0
  1480     0024  0000               	db	0
  1481     0025  0000               	db	0
  1482     0026  0000               	db	0
  1483     0027  0000               	db	0
  1484     0028  0000               	db	0
  1485     0029  0000               	db	0
  1486     002A  0000               	db	0
  1487     002B  0000               	db	0
  1488     002C  0000               	db	0
  1489     002D  0000               	db	0
  1490     002E  0000               	db	0
  1491     002F  0000               	db	0
  1492     0030  0000               	db	0
  1493     0031  0000               	db	0
  1494     0032  0000               	db	0
  1495     0033  0000               	db	0
  1496     0034  0000               	db	0
  1497     0035  0000               	db	0
  1498     0036  0000               	db	0
  1499     0037  0000               	db	0
  1500     0038  0000               	db	0
  1501     0039  0000               	db	0
  1502     003A  0000               	db	0
  1503     003B  0000               	db	0
  1504     003C  0000               	db	0
  1505     003D  0000               	db	0
  1506     003E  0000               	db	0
  1507     003F  0000               	db	0
  1508     0040  0000               	db	0
  1509     0041  0000               	db	0
  1510     0042  0000               	db	0
  1511     0043  0000               	db	0
  1512     0044  0000               	db	0
  1513     0045  0000               	db	0
  1514     0046  0000               	db	0
  1515     0047  0000               	db	0
  1516     0048  0000               	db	0
  1517     0049  0000               	db	0
  1518     004A  0000               	db	0
  1519     004B  0000               	db	0
  1520     004C  0000               	db	0
  1521     004D  0000               	db	0
  1522     004E  0000               	db	0
  1523     004F  0000               	db	0
  1524     0050  0000               	db	0
  1525     0051  0000               	db	0
  1526     0052  0000               	db	0
  1527     0053  0000               	db	0
  1528     0054  0000               	db	0
  1529     0055  0000               	db	0
  1530     0056  0000               	db	0
  1531     0057  0000               	db	0
  1532     0058  0000               	db	0
  1533     0059  0000               	db	0
  1534     005A  0000               	db	0
  1535     005B  0000               	db	0
  1536     005C  0000               	db	0
  1537     005D  0000               	db	0
  1538     005E  0000               	db	0
  1539     005F  0000               	db	0
  1540     0060  0000               	db	0
  1541     0061  0000               	db	0
  1542     0062  0000               	db	0
  1543     0063  0000               	db	0
  1544     0064  0000               	db	0
  1545     0065  0000               	db	0
  1546     0066  0000               	db	0
  1547     0067  0000               	db	0
  1548     0068  0000               	db	0
  1549     0069  0000               	db	0
  1550     006A  0000               	db	0
  1551     006B  0000               	db	0
  1552     006C  0000               	db	0
  1553     006D  0000               	db	0
  1554     006E  0000               	db	0
  1555     006F  0000               	db	0
  1556     0070  0000               	db	0
  1557     0071  0000               	db	0
  1558     0072  0000               	db	0
  1559     0073  0000               	db	0
  1560     0074  0000               	db	0
  1561     0075  0000               	db	0
  1562     0076  0000               	db	0
  1563     0077  0000               	db	0
  1564     0078  0000               	db	0
  1565     0079  0000               	db	0
  1566     007A  0000               	db	0
  1567     007B  0000               	db	0
  1568     007C  0000               	db	0
  1569     007D  0000               	db	0
  1570     007E  0000               	db	0
  1571     007F  0000               	db	0
  1572     0080  0000               	db	0
  1573     0081  0000               	db	0
  1574     0082  0000               	db	0
  1575     0083  0000               	db	0
  1576     0084  0000               	db	0
  1577     0085  0000               	db	0
  1578     0086  0000               	db	0
  1579     0087  0000               	db	0
  1580     0088  0000               	db	0
  1581     0089  0000               	db	0
  1582     008A  0000               	db	0
  1583     008B  0000               	db	0
  1584     008C  0000               	db	0
  1585     008D  0000               	db	0
  1586     008E  0000               	db	0
  1587     008F  0000               	db	0
  1588     0090  0000               	db	0
  1589     0091  0000               	db	0
  1590     0092  0000               	db	0
  1591     0093  0000               	db	0
  1592     0094  0000               	db	0
  1593     0095  0000               	db	0
  1594     0096  0000               	db	0
  1595     0097  0000               	db	0
  1596     0098  0000               	db	0
  1597     0099  0000               	db	0
  1598     009A  0000               	db	0
  1599     009B  0000               	db	0
  1600     009C  0000               	db	0
  1601     009D  0000               	db	0
  1602     009E  0000               	db	0
  1603     009F  0000               	db	0
  1604     00A0  0000               	db	0
  1605     00A1  0000               	db	0
  1606     00A2  0000               	db	0
  1607     00A3  0000               	db	0
  1608     00A4  0000               	db	0
  1609     00A5  0000               	db	0
  1610     00A6  0000               	db	0
  1611     00A7  0000               	db	0
  1612     00A8  0000               	db	0
  1613     00A9  0000               	db	0
  1614     00AA  0000               	db	0
  1615     00AB  0000               	db	0
  1616     00AC  0000               	db	0
  1617     00AD  0000               	db	0
  1618     00AE  0000               	db	0
  1619     00AF  0000               	db	0
  1620     00B0  0000               	db	0
  1621     00B1  0000               	db	0
  1622     00B2  0000               	db	0
  1623     00B3  0000               	db	0
  1624     00B4  0000               	db	0
  1625     00B5  0000               	db	0
  1626     00B6  0000               	db	0
  1627     00B7  0000               	db	0
  1628     00B8  0000               	db	0
  1629     00B9  0000               	db	0
  1630     00BA  0000               	db	0
  1631     00BB  0000               	db	0
  1632     00BC  0000               	db	0
  1633     00BD  0000               	db	0
  1634     00BE  0000               	db	0
  1635     00BF  0000               	db	0
  1636     00C0  0000               	db	0
  1637     00C1  0000               	db	0
  1638     00C2  0000               	db	0
  1639     00C3  0000               	db	0
  1640     00C4  0000               	db	0
  1641     00C5  0000               	db	0
  1642     00C6  0000               	db	0
  1643     00C7  0000               	db	0
  1644     00C8  0000               	db	0
  1645     00C9  0000               	db	0
  1646     00CA  0000               	db	0
  1647     00CB  0000               	db	0
  1648     00CC  0000               	db	0
  1649     00CD  0000               	db	0
  1650     00CE  0000               	db	0
  1651     00CF  0000               	db	0
  1652     00D0  0000               	db	0
  1653     00D1  0000               	db	0
  1654     00D2  0000               	db	0
  1655     00D3  0000               	db	0
  1656     00D4  0000               	db	0
  1657     00D5  0000               	db	0
  1658     00D6  0000               	db	0
  1659     00D7  0000               	db	0
  1660     00D8  0000               	db	0
  1661     00D9  0000               	db	0
  1662     00DA  0000               	db	0
  1663     00DB  0000               	db	0
  1664                           
  1665                           	psect	clrtext
  1666     0452                     clear_ram0:	
  1667                           ;	Called with FSR0 containing the base address, and
  1668                           ;	WREG with the size to clear
  1669                           
  1670     0452  0064               	clrwdt	;clear the watchdog before getting into this loop
  1671     0453                     clrloop0:
  1672     0453  0180               	clrf	0	;clear RAM location pointed to by FSR
  1673     0454  3101               	addfsr 0,1
  1674     0455  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1675     0456  2C53               	goto	clrloop0	;have we reached the end yet?
  1676     0457  3400               	retlw	0	;all done for this memory range, return
  1677                           
  1678                           	psect	cstackCOMMON
  1679     0070                     __pcstackCOMMON:
  1680     0070                     ?_EUSART_SetFramingErrorHandler:
  1681     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684     0070                     ?_EUSART_SetErrorHandler:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687     0070                     ?_PIN_MANAGER_Initialize:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690     0070                     ?_OSCILLATOR_Initialize:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0070                     ?_WDT_Initialize:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0070                     ?_EUSART_Initialize:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0070                     ?_EUSART_is_rx_ready:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0070                     ?_EUSART_Read:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0070                     ?_EUSART_Write:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708     0070                     ?_SYSTEM_Initialize:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711     0070                     ?_exibirMenu:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714     0070                     ?_exibirLista:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717     0070                     ?_armazenarNome:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720     0070                     ?_apagarLista:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723     0070                     ?_executarComando:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726     0070                     ?_main:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729     0070                     ?___eecpymem:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732     0070                     ?___memcpyee:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735     0070                     ?___bmul:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738     0070                     EUSART_Write@txData:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741     0070                     ___eecpymem@to:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744     0070                     ___memcpyee@to:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747     0070                     ___bmul@multiplicand:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1754                           ; 2 bytes @ 0x0
  1755                           
  1756     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759     0070                     ??_PIN_MANAGER_Initialize:	
  1760                           ; 2 bytes @ 0x0
  1761                           
  1762     0070                     ??_OSCILLATOR_Initialize:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765     0070                     ??_WDT_Initialize:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768     0070                     ??_EUSART_is_rx_ready:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771     0070                     ??_EUSART_Read:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774     0070                     ??_EUSART_Write:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777                           
  1778                           ; 1 bytes @ 0x0
  1779     0070                     	ds	1
  1780     0071                     ?_envia_mensagem:
  1781     0071                     ___eecpymem@from:	
  1782                           ; 1 bytes @ 0x1
  1783                           
  1784     0071                     ___memcpyee@from:	
  1785                           ; 1 bytes @ 0x1
  1786                           
  1787     0071                     ___bmul@product:	
  1788                           ; 1 bytes @ 0x1
  1789                           
  1790     0071                     envia_mensagem@mensagem:	
  1791                           ; 1 bytes @ 0x1
  1792                           
  1793     0071                     ??___bmul:	
  1794                           ; 2 bytes @ 0x1
  1795                           
  1796                           
  1797                           ; 1 bytes @ 0x1
  1798     0071                     	ds	1
  1799     0072                     ___eecpymem@size:
  1800     0072                     ___memcpyee@size:	
  1801                           ; 1 bytes @ 0x2
  1802                           
  1803     0072                     ___bmul@multiplier:	
  1804                           ; 1 bytes @ 0x2
  1805                           
  1806     0072                     ??_EUSART_SetFramingErrorHandler:	
  1807                           ; 1 bytes @ 0x2
  1808                           
  1809     0072                     ??_EUSART_SetOverrunErrorHandler:	
  1810                           ; 1 bytes @ 0x2
  1811                           
  1812     0072                     ??_EUSART_SetErrorHandler:	
  1813                           ; 1 bytes @ 0x2
  1814                           
  1815     0072                     ??_EUSART_Initialize:	
  1816                           ; 1 bytes @ 0x2
  1817                           
  1818     0072                     ??_SYSTEM_Initialize:	
  1819                           ; 1 bytes @ 0x2
  1820                           
  1821                           
  1822                           ; 1 bytes @ 0x2
  1823     0072                     	ds	1
  1824     0073                     ??_envia_mensagem:
  1825     0073                     ??___eecpymem:	
  1826                           ; 1 bytes @ 0x3
  1827                           
  1828     0073                     ??___memcpyee:	
  1829                           ; 1 bytes @ 0x3
  1830                           
  1831                           
  1832                           ; 1 bytes @ 0x3
  1833     0073                     	ds	1
  1834     0074                     envia_mensagem@i:
  1835                           
  1836                           ; 1 bytes @ 0x4
  1837     0074                     	ds	1
  1838     0075                     ___eecpymem@cp:
  1839     0075                     ___memcpyee@ptr:	
  1840                           ; 1 bytes @ 0x5
  1841                           
  1842     0075                     ??_exibirMenu:	
  1843                           ; 1 bytes @ 0x5
  1844                           
  1845                           
  1846                           ; 1 bytes @ 0x5
  1847     0075                     	ds	1
  1848     0076                     ?___eetoc:
  1849     0076                     ?___ctoee:	
  1850                           ; 1 bytes @ 0x6
  1851                           
  1852     0076                     ___eetoc@addr:	
  1853                           ; 1 bytes @ 0x6
  1854                           
  1855     0076                     ___ctoee@addr:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858                           
  1859                           ; 1 bytes @ 0x6
  1860     0076                     	ds	1
  1861     0077                     ___eetoc@data:
  1862     0077                     ___ctoee@data:	
  1863                           ; 1 bytes @ 0x7
  1864                           
  1865     0077                     ??___eetoc:	
  1866                           ; 1 bytes @ 0x7
  1867                           
  1868                           
  1869                           ; 1 bytes @ 0x7
  1870     0077                     	ds	1
  1871     0078                     armazenarNome@rxChar:
  1872     0078                     ??_exibirLista:	
  1873                           ; 1 bytes @ 0x8
  1874                           
  1875     0078                     ??_armazenarNome:	
  1876                           ; 1 bytes @ 0x8
  1877                           
  1878     0078                     ??_apagarLista:	
  1879                           ; 1 bytes @ 0x8
  1880                           
  1881     0078                     ??___ctoee:	
  1882                           ; 1 bytes @ 0x8
  1883                           
  1884                           
  1885                           ; 1 bytes @ 0x8
  1886     0078                     	ds	1
  1887     0079                     armazenarNome@countByte:
  1888     0079                     apagarLista@i:	
  1889                           ; 1 bytes @ 0x9
  1890                           
  1891                           
  1892                           ; 2 bytes @ 0x9
  1893     0079                     	ds	2
  1894     007B                     ??_executarComando:
  1895                           
  1896                           ; 1 bytes @ 0xB
  1897     007B                     	ds	1
  1898     007C                     main@rxChar:
  1899     007C                     ??_main:	
  1900                           ; 1 bytes @ 0xC
  1901                           
  1902                           
  1903                           ; 1 bytes @ 0xC
  1904     007C                     	ds	1
  1905                           
  1906                           	psect	cstackBANK0
  1907     0041                     __pcstackBANK0:
  1908     0041                     exibirLista@j:
  1909                           
  1910                           ; 2 bytes @ 0x0
  1911     0041                     	ds	2
  1912     0043                     exibirLista@j_417:
  1913                           
  1914                           ; 2 bytes @ 0x2
  1915     0043                     	ds	2
  1916     0045                     exibirLista@i:
  1917                           
  1918                           ; 2 bytes @ 0x4
  1919     0045                     	ds	2
  1920     0047                     executarComando@j:
  1921                           
  1922                           ; 2 bytes @ 0x6
  1923     0047                     	ds	2
  1924     0049                     executarComando@i:
  1925                           
  1926                           ; 1 bytes @ 0x8
  1927     0049                     	ds	1
  1928                           
  1929                           	psect	maintext
  1930     0566                     __pmaintext:	
  1931 ;;
  1932 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1933 ;;
  1934 ;; *************** function _main *****************
  1935 ;; Defined at:
  1936 ;;		line 194 in file "main.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  rxChar          1   12[COMMON] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : B1F/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1950 ;;      Params:         0       0       0       0       0       0
  1951 ;;      Locals:         1       0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0
  1953 ;;      Totals:         1       0       0       0       0       0
  1954 ;;Total ram usage:        1 bytes
  1955 ;; Hardware stack levels required when called: 4
  1956 ;; This function calls:
  1957 ;;		_EUSART_Read
  1958 ;;		_EUSART_is_rx_ready
  1959 ;;		_SYSTEM_Initialize
  1960 ;;		_executarComando
  1961 ;;		_exibirMenu
  1962 ;; This function is called by:
  1963 ;;		Startup code after reset
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967     0566                     _main:	
  1968                           ;psect for function _main
  1969                           
  1970     0566                     l1739:	
  1971                           ;incstack = 0
  1972                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1973                           
  1974                           
  1975                           ;main.c: 195:     SYSTEM_Initialize();
  1976     0566  3184  248B  3185   	fcall	_SYSTEM_Initialize
  1977     0569                     l1741:
  1978                           
  1979                           ;main.c: 197:     comando = 0;
  1980     0569  0020               	movlb	0	; select bank0
  1981     056A  01BF               	clrf	_comando
  1982     056B                     l1743:
  1983                           
  1984                           ;main.c: 198:     exibirMenu();
  1985     056B  3184  2458  3185   	fcall	_exibirMenu
  1986     056E                     l1745:
  1987                           
  1988                           ;main.c: 200:     if (EUSART_is_rx_ready()) {
  1989     056E  3184  243B  3185   	fcall	_EUSART_is_rx_ready
  1990     0571  3A00               	xorlw	0
  1991     0572  1903               	skipnz
  1992     0573  2D75               	goto	u851
  1993     0574  2D76               	goto	u850
  1994     0575                     u851:
  1995     0575  2D6E               	goto	l1745
  1996     0576                     u850:
  1997     0576                     l1747:
  1998                           
  1999                           ;main.c: 201:             uint8_t rxChar = EUSART_Read();
  2000     0576  3184  2498  3185   	fcall	_EUSART_Read
  2001     0579  00FC               	movwf	main@rxChar
  2002     057A                     l1749:
  2003                           
  2004                           ;main.c: 202:             if (rxChar == 0x4C || rxChar == 0x41 || rxChar == 0x50 || rxCh
      +                          ar == 0x52) {
  2005     057A  304C               	movlw	76
  2006     057B  067C               	xorwf	main@rxChar,w
  2007     057C  1903               	btfsc	3,2
  2008     057D  2D7F               	goto	u861
  2009     057E  2D80               	goto	u860
  2010     057F                     u861:
  2011     057F  2D92               	goto	l1757
  2012     0580                     u860:
  2013     0580                     l1751:
  2014     0580  3041               	movlw	65
  2015     0581  067C               	xorwf	main@rxChar,w
  2016     0582  1903               	btfsc	3,2
  2017     0583  2D85               	goto	u871
  2018     0584  2D86               	goto	u870
  2019     0585                     u871:
  2020     0585  2D92               	goto	l1757
  2021     0586                     u870:
  2022     0586                     l1753:
  2023     0586  3050               	movlw	80
  2024     0587  067C               	xorwf	main@rxChar,w
  2025     0588  1903               	btfsc	3,2
  2026     0589  2D8B               	goto	u881
  2027     058A  2D8C               	goto	u880
  2028     058B                     u881:
  2029     058B  2D92               	goto	l1757
  2030     058C                     u880:
  2031     058C                     l1755:
  2032     058C  3052               	movlw	82
  2033     058D  067C               	xorwf	main@rxChar,w
  2034     058E  1D03               	btfss	3,2
  2035     058F  2D91               	goto	u891
  2036     0590  2D92               	goto	u890
  2037     0591                     u891:
  2038     0591  2D96               	goto	l1759
  2039     0592                     u890:
  2040     0592                     l1757:
  2041                           
  2042                           ;main.c: 203:                 comando = rxChar;
  2043     0592  087C               	movf	main@rxChar,w
  2044     0593  0020               	movlb	0	; select bank0
  2045     0594  00BF               	movwf	_comando
  2046                           
  2047                           ;main.c: 204:             }
  2048     0595  2D6E               	goto	l1745
  2049     0596                     l1759:
  2050     0596  300D               	movlw	13
  2051     0597  067C               	xorwf	main@rxChar,w
  2052     0598  1D03               	btfss	3,2
  2053     0599  2D9B               	goto	u901
  2054     059A  2D9C               	goto	u900
  2055     059B                     u901:
  2056     059B  2DA0               	goto	l315
  2057     059C                     u900:
  2058     059C                     l1761:
  2059                           
  2060                           ;main.c: 206:                 executarComando();
  2061     059C  3187  272B  3185   	fcall	_executarComando
  2062     059F  2D6E               	goto	l1745
  2063     05A0                     l315:	
  2064                           ;main.c: 208:     }
  2065                           
  2066     05A0  2D6E               	goto	l1745
  2067     05A1  3180  2802         	ljmp	start
  2068     05A3                     __end_of_main:
  2069                           
  2070                           	psect	text1
  2071     072B                     __ptext1:	
  2072 ;; *************** function _executarComando *****************
  2073 ;; Defined at:
  2074 ;;		line 139 in file "main.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  j               2    6[BANK0 ] int 
  2079 ;;  i               1    8[BANK0 ] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2089 ;;      Params:         0       0       0       0       0       0
  2090 ;;      Locals:         0       3       0       0       0       0
  2091 ;;      Temps:          1       0       0       0       0       0
  2092 ;;      Totals:         1       3       0       0       0       0
  2093 ;;Total ram usage:        4 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 3
  2096 ;; This function calls:
  2097 ;;		_EUSART_Write
  2098 ;;		___bmul
  2099 ;;		___ctoee
  2100 ;;		___eetoc
  2101 ;;		_apagarLista
  2102 ;;		_armazenarNome
  2103 ;;		_envia_mensagem
  2104 ;;		_exibirLista
  2105 ;;		_exibirMenu
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111     072B                     _executarComando:	
  2112                           ;psect for function _executarComando
  2113                           
  2114     072B                     l1673:	
  2115                           ;incstack = 0
  2116                           ; Regs used in _executarComando: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2117                           
  2118                           
  2119                           ;main.c: 141:     switch (comando) {
  2120     072B  2FE4               	goto	l1737
  2121     072C                     l1675:
  2122                           
  2123                           ;main.c: 143:             if (listaclientes[0].estado == 0) {
  2124     072C  3000               	movlw	(low _listaclientes)& (0+255)
  2125     072D  00F6               	movwf	___eetoc@addr
  2126     072E  3184  2474  3187   	fcall	___eetoc
  2127     0731  3A00               	xorlw	0
  2128     0732  1D03               	skipz
  2129     0733  2F35               	goto	u781
  2130     0734  2F36               	goto	u780
  2131     0735                     u781:
  2132     0735  2F3E               	goto	l1679
  2133     0736                     u780:
  2134     0736                     l1677:
  2135                           
  2136                           ;main.c: 144:                 envia_mensagem(mensagem2);
  2137     0736  30A0               	movlw	low (_mensagem2| (0+32768))
  2138     0737  00F1               	movwf	envia_mensagem@mensagem
  2139     0738  3088               	movlw	high (_mensagem2| (0+32768))
  2140     0739  00F2               	movwf	envia_mensagem@mensagem+1
  2141     073A  3184  24D2  3187   	fcall	_envia_mensagem
  2142                           
  2143                           ;main.c: 145:             } else {
  2144     073D  2FF3               	goto	l309
  2145     073E                     l1679:
  2146                           
  2147                           ;main.c: 147:                 envia_mensagem(mensagem1);
  2148     073E  30D2               	movlw	low (_mensagem1| (0+32768))
  2149     073F  00F1               	movwf	envia_mensagem@mensagem
  2150     0740  3088               	movlw	high (_mensagem1| (0+32768))
  2151     0741  00F2               	movwf	envia_mensagem@mensagem+1
  2152     0742  3184  24D2  3187   	fcall	_envia_mensagem
  2153     0745                     l1681:
  2154                           
  2155                           ;main.c: 148:                 exibirLista();;
  2156     0745  3186  2666  3187   	fcall	_exibirLista
  2157     0748  2FF3               	goto	l309
  2158     0749                     l1683:
  2159                           
  2160                           ;main.c: 153:                   armazenarNome();
  2161     0749  3185  25E6  3187   	fcall	_armazenarNome
  2162     074C                     l1685:
  2163                           
  2164                           ;main.c: 154:                   if (!nome_nulo){
  2165     074C  0020               	movlb	0	; select bank0
  2166     074D  083D               	movf	_nome_nulo,w
  2167     074E  1D03               	btfss	3,2
  2168     074F  2F51               	goto	u791
  2169     0750  2F52               	goto	u790
  2170     0751                     u791:
  2171     0751  2FF3               	goto	l309
  2172     0752                     u790:
  2173     0752                     l1687:
  2174                           
  2175                           ;main.c: 155:                       countNome++;
  2176     0752  3001               	movlw	1
  2177     0753  07BE               	addwf	_countNome,f
  2178     0754  2FF3               	goto	l309
  2179     0755                     l1691:
  2180                           
  2181                           ;main.c: 164:              for (uint8_t i = 0; i < 10; i++) {
  2182     0755  01C9               	clrf	executarComando@i
  2183     0756                     l1697:
  2184                           
  2185                           ;main.c: 165:                 if (listaclientes[i].estado == 1) {
  2186     0756  3016               	movlw	22
  2187     0757  00F0               	movwf	___bmul@multiplicand
  2188     0758  0849               	movf	executarComando@i,w
  2189     0759  3184  24A7  3187   	fcall	___bmul
  2190     075C  3E00               	addlw	(low _listaclientes)& (0+255)
  2191     075D  00F6               	movwf	___eetoc@addr
  2192     075E  3184  2474  3187   	fcall	___eetoc
  2193     0761  3A01               	xorlw	1
  2194     0762  1D03               	skipz
  2195     0763  2F65               	goto	u801
  2196     0764  2F66               	goto	u800
  2197     0765                     u801:
  2198     0765  2FC5               	goto	l1723
  2199     0766                     u800:
  2200     0766                     l1699:
  2201                           
  2202                           ;main.c: 166:                     envia_mensagem(mensagem3);
  2203     0766  30F7               	movlw	low (_mensagem3| (0+32768))
  2204     0767  00F1               	movwf	envia_mensagem@mensagem
  2205     0768  3088               	movlw	high (_mensagem3| (0+32768))
  2206     0769  00F2               	movwf	envia_mensagem@mensagem+1
  2207     076A  3184  24D2  3187   	fcall	_envia_mensagem
  2208     076D                     l1701:
  2209                           
  2210                           ;main.c: 167:                     EUSART_Write(0x20);
  2211     076D  3020               	movlw	32
  2212     076E  3184  246A  3187   	fcall	_EUSART_Write
  2213     0771                     l1703:
  2214                           
  2215                           ;main.c: 168:                     EUSART_Write(0x20);
  2216     0771  3020               	movlw	32
  2217     0772  3184  246A  3187   	fcall	_EUSART_Write
  2218     0775                     l1705:
  2219                           
  2220                           ;main.c: 169:                     for (int j = 0; j < 20 && listaclientes[i].Nome[j] != 
      +                          0; j++) {
  2221     0775  0020               	movlb	0	; select bank0
  2222     0776  01C7               	clrf	executarComando@j
  2223     0777  01C8               	clrf	executarComando@j+1
  2224     0778  2F8F               	goto	l1711
  2225     0779                     l1707:
  2226                           
  2227                           ;main.c: 170:                         EUSART_Write(listaclientes[i].Nome[j]);
  2228     0779  3016               	movlw	22
  2229     077A  00F0               	movwf	___bmul@multiplicand
  2230     077B  0020               	movlb	0	; select bank0
  2231     077C  0849               	movf	executarComando@i,w
  2232     077D  3184  24A7  3187   	fcall	___bmul
  2233     0780  3E01               	addlw	(low (_listaclientes+1))& (0+255)
  2234     0781  0020               	movlb	0	; select bank0
  2235     0782  0747               	addwf	executarComando@j,w
  2236     0783  00F6               	movwf	___eetoc@addr
  2237     0784  3184  2474  3187   	fcall	___eetoc
  2238     0787  3184  246A  3187   	fcall	_EUSART_Write
  2239     078A                     l1709:
  2240                           
  2241                           ;main.c: 171:                     }
  2242     078A  3001               	movlw	1
  2243     078B  0020               	movlb	0	; select bank0
  2244     078C  07C7               	addwf	executarComando@j,f
  2245     078D  3000               	movlw	0
  2246     078E  3DC8               	addwfc	executarComando@j+1,f
  2247     078F                     l1711:
  2248     078F  0848               	movf	executarComando@j+1,w
  2249     0790  3A80               	xorlw	128
  2250     0791  00FB               	movwf	??_executarComando
  2251     0792  3080               	movlw	128
  2252     0793  027B               	subwf	??_executarComando,w
  2253     0794  1D03               	skipz
  2254     0795  2F98               	goto	u815
  2255     0796  3014               	movlw	20
  2256     0797  0247               	subwf	executarComando@j,w
  2257     0798                     u815:
  2258     0798  1803               	skipnc
  2259     0799  2F9B               	goto	u811
  2260     079A  2F9C               	goto	u810
  2261     079B                     u811:
  2262     079B  2FAF               	goto	l1715
  2263     079C                     u810:
  2264     079C                     l1713:
  2265     079C  3016               	movlw	22
  2266     079D  00F0               	movwf	___bmul@multiplicand
  2267     079E  0020               	movlb	0	; select bank0
  2268     079F  0849               	movf	executarComando@i,w
  2269     07A0  3184  24A7  3187   	fcall	___bmul
  2270     07A3  3E01               	addlw	(low (_listaclientes+1))& (0+255)
  2271     07A4  0020               	movlb	0	; select bank0
  2272     07A5  0747               	addwf	executarComando@j,w
  2273     07A6  00F6               	movwf	___eetoc@addr
  2274     07A7  3184  2474  3187   	fcall	___eetoc
  2275     07AA  3A00               	xorlw	0
  2276     07AB  1D03               	skipz
  2277     07AC  2FAE               	goto	u821
  2278     07AD  2FAF               	goto	u820
  2279     07AE                     u821:
  2280     07AE  2F79               	goto	l1707
  2281     07AF                     u820:
  2282     07AF                     l1715:
  2283                           
  2284                           ;main.c: 172:                     EUSART_Write(0x0D);
  2285     07AF  300D               	movlw	13
  2286     07B0  3184  246A  3187   	fcall	_EUSART_Write
  2287     07B3                     l1717:
  2288                           
  2289                           ;main.c: 173:                     listaclientes[i].estado = 2;
  2290     07B3  3016               	movlw	22
  2291     07B4  00F0               	movwf	___bmul@multiplicand
  2292     07B5  0020               	movlb	0	; select bank0
  2293     07B6  0849               	movf	executarComando@i,w
  2294     07B7  3184  24A7  3187   	fcall	___bmul
  2295     07BA  3E00               	addlw	(low _listaclientes)& (0+255)
  2296     07BB  00F6               	movwf	___ctoee@addr
  2297     07BC  3002               	movlw	2
  2298     07BD  00F7               	movwf	___ctoee@data
  2299     07BE  3184  2460  3187   	fcall	___ctoee
  2300     07C1                     l1719:
  2301                           
  2302                           ;main.c: 174:                         verificar = 1;
  2303     07C1  3001               	movlw	1
  2304     07C2  0020               	movlb	0	; select bank0
  2305     07C3  00BB               	movwf	_verificar
  2306                           
  2307                           ;main.c: 175:                     break;
  2308     07C4  2FF3               	goto	l309
  2309     07C5                     l1723:
  2310     07C5  0020               	movlb	0	; select bank0
  2311     07C6  083B               	movf	_verificar,w
  2312     07C7  1D03               	btfss	3,2
  2313     07C8  2FCA               	goto	u831
  2314     07C9  2FCB               	goto	u830
  2315     07CA                     u831:
  2316     07CA  2FD2               	goto	l1727
  2317     07CB                     u830:
  2318     07CB                     l1725:
  2319                           
  2320                           ;main.c: 178:                     envia_mensagem(mensagem6);
  2321     07CB  3032               	movlw	low (_mensagem6| (0+32768))
  2322     07CC  00F1               	movwf	envia_mensagem@mensagem
  2323     07CD  3088               	movlw	high (_mensagem6| (0+32768))
  2324     07CE  00F2               	movwf	envia_mensagem@mensagem+1
  2325     07CF  3184  24D2  3187   	fcall	_envia_mensagem
  2326     07D2                     l1727:
  2327                           
  2328                           ;main.c: 181:                }
  2329     07D2  3001               	movlw	1
  2330     07D3  0020               	movlb	0	; select bank0
  2331     07D4  07C9               	addwf	executarComando@i,f
  2332     07D5                     l1729:
  2333     07D5  300A               	movlw	10
  2334     07D6  0249               	subwf	executarComando@i,w
  2335     07D7  1C03               	skipc
  2336     07D8  2FDA               	goto	u841
  2337     07D9  2FDB               	goto	u840
  2338     07DA                     u841:
  2339     07DA  2F56               	goto	l1697
  2340     07DB                     u840:
  2341     07DB  2FF3               	goto	l309
  2342     07DC                     l1731:
  2343                           
  2344                           ;main.c: 185:                 apagarLista();
  2345     07DC  3185  2514  3187   	fcall	_apagarLista
  2346                           
  2347                           ;main.c: 186:                 break;
  2348     07DF  2FF3               	goto	l309
  2349     07E0                     l1733:
  2350                           
  2351                           ;main.c: 188:                 exibirMenu();
  2352     07E0  3184  2458  3187   	fcall	_exibirMenu
  2353                           
  2354                           ;main.c: 189:                 break;
  2355     07E3  2FF3               	goto	l309
  2356     07E4                     l1737:
  2357     07E4  0020               	movlb	0	; select bank0
  2358     07E5  083F               	movf	_comando,w
  2359                           
  2360                           ; Switch size 1, requested type "simple"
  2361                           ; Number of cases is 4, Range of values is 65 to 82
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte           13     7 (average)
  2365                           ; direct_byte           45     9 (fixed)
  2366                           ; jumptable            263     9 (fixed)
  2367                           ;	Chosen strategy is simple_byte
  2368     07E6  3A41               	xorlw	65	; case 65
  2369     07E7  1903               	skipnz
  2370     07E8  2F49               	goto	l1683
  2371     07E9  3A0D               	xorlw	13	; case 76
  2372     07EA  1903               	skipnz
  2373     07EB  2F2C               	goto	l1675
  2374     07EC  3A1C               	xorlw	28	; case 80
  2375     07ED  1903               	skipnz
  2376     07EE  2F55               	goto	l1691
  2377     07EF  3A02               	xorlw	2	; case 82
  2378     07F0  1903               	skipnz
  2379     07F1  2FDC               	goto	l1731
  2380     07F2  2FE0               	goto	l1733
  2381     07F3                     l309:
  2382     07F3  0008               	return
  2383     07F4                     __end_of_executarComando:
  2384                           
  2385                           	psect	text2
  2386     0458                     __ptext2:	
  2387 ;; *************** function _exibirMenu *****************
  2388 ;; Defined at:
  2389 ;;		line 69 in file "main.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2403 ;;      Params:         0       0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 2
  2410 ;; This function calls:
  2411 ;;		_envia_mensagem
  2412 ;; This function is called by:
  2413 ;;		_executarComando
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418     0458                     _exibirMenu:	
  2419                           ;psect for function _exibirMenu
  2420                           
  2421     0458                     l1567:	
  2422                           ;incstack = 0
  2423                           ; Regs used in _exibirMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2424                           
  2425                           
  2426                           ;main.c: 70:     envia_mensagem(mensagem0);
  2427     0458  3000               	movlw	low (_mensagem0| (0+32768))
  2428     0459  00F1               	movwf	envia_mensagem@mensagem
  2429     045A  3088               	movlw	high (_mensagem0| (0+32768))
  2430     045B  00F2               	movwf	envia_mensagem@mensagem+1
  2431     045C  3184  24D2  3184   	fcall	_envia_mensagem
  2432     045F                     l245:
  2433     045F  0008               	return
  2434     0460                     __end_of_exibirMenu:
  2435                           
  2436                           	psect	text3
  2437     0666                     __ptext3:	
  2438 ;; *************** function _exibirLista *****************
  2439 ;; Defined at:
  2440 ;;		line 73 in file "main.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  j               2    2[BANK0 ] int 
  2445 ;;  j               2    0[BANK0 ] int 
  2446 ;;  i               2    4[BANK0 ] int 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2456 ;;      Params:         0       0       0       0       0       0
  2457 ;;      Locals:         0       6       0       0       0       0
  2458 ;;      Temps:          1       0       0       0       0       0
  2459 ;;      Totals:         1       6       0       0       0       0
  2460 ;;Total ram usage:        7 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 2
  2463 ;; This function calls:
  2464 ;;		_EUSART_Write
  2465 ;;		___bmul
  2466 ;;		___eetoc
  2467 ;; This function is called by:
  2468 ;;		_executarComando
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472     0666                     _exibirLista:	
  2473                           ;psect for function _exibirLista
  2474                           
  2475     0666                     l1569:	
  2476                           ;incstack = 0
  2477                           ; Regs used in _exibirLista: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2478                           
  2479                           
  2480                           ;main.c: 74:     for(int i = 0; i < 21; i++){
  2481     0666  0020               	movlb	0	; select bank0
  2482     0667  01C5               	clrf	exibirLista@i
  2483     0668  01C6               	clrf	exibirLista@i+1
  2484     0669                     l1575:
  2485                           
  2486                           ;main.c: 75:         if(listaclientes[i].estado == 2){
  2487     0669  3016               	movlw	22
  2488     066A  00F0               	movwf	___bmul@multiplicand
  2489     066B  0020               	movlb	0	; select bank0
  2490     066C  0845               	movf	exibirLista@i,w
  2491     066D  3184  24A7  3186   	fcall	___bmul
  2492     0670  3E00               	addlw	(low _listaclientes)& (0+255)
  2493     0671  00F6               	movwf	___eetoc@addr
  2494     0672  3184  2474  3186   	fcall	___eetoc
  2495     0675  3A02               	xorlw	2
  2496     0676  1D03               	skipz
  2497     0677  2E79               	goto	u651
  2498     0678  2E7A               	goto	u650
  2499     0679                     u651:
  2500     0679  2EC1               	goto	l1591
  2501     067A                     u650:
  2502     067A                     l1577:
  2503                           
  2504                           ;main.c: 76:             EUSART_Write(0x58);
  2505     067A  3058               	movlw	88
  2506     067B  3184  246A  3186   	fcall	_EUSART_Write
  2507                           
  2508                           ;main.c: 77:             EUSART_Write(0x20);
  2509     067E  3020               	movlw	32
  2510     067F  3184  246A  3186   	fcall	_EUSART_Write
  2511     0682                     l1579:
  2512                           
  2513                           ;main.c: 78:             for(int j = 0; j < 20 && listaclientes[i].Nome[j] != 0; j++){
  2514     0682  0020               	movlb	0	; select bank0
  2515     0683  01C1               	clrf	exibirLista@j
  2516     0684  01C2               	clrf	exibirLista@j+1
  2517     0685  2E9C               	goto	l1585
  2518     0686                     l1581:
  2519                           
  2520                           ;main.c: 79:             EUSART_Write(listaclientes[i].Nome[j]);
  2521     0686  3016               	movlw	22
  2522     0687  00F0               	movwf	___bmul@multiplicand
  2523     0688  0020               	movlb	0	; select bank0
  2524     0689  0845               	movf	exibirLista@i,w
  2525     068A  3184  24A7  3186   	fcall	___bmul
  2526     068D  3E01               	addlw	(low (_listaclientes+1))& (0+255)
  2527     068E  0020               	movlb	0	; select bank0
  2528     068F  0741               	addwf	exibirLista@j,w
  2529     0690  00F6               	movwf	___eetoc@addr
  2530     0691  3184  2474  3186   	fcall	___eetoc
  2531     0694  3184  246A  3186   	fcall	_EUSART_Write
  2532     0697                     l1583:
  2533                           
  2534                           ;main.c: 80:             }
  2535     0697  3001               	movlw	1
  2536     0698  0020               	movlb	0	; select bank0
  2537     0699  07C1               	addwf	exibirLista@j,f
  2538     069A  3000               	movlw	0
  2539     069B  3DC2               	addwfc	exibirLista@j+1,f
  2540     069C                     l1585:
  2541     069C  0842               	movf	exibirLista@j+1,w
  2542     069D  3A80               	xorlw	128
  2543     069E  00F8               	movwf	??_exibirLista
  2544     069F  3080               	movlw	128
  2545     06A0  0278               	subwf	??_exibirLista,w
  2546     06A1  1D03               	skipz
  2547     06A2  2EA5               	goto	u665
  2548     06A3  3014               	movlw	20
  2549     06A4  0241               	subwf	exibirLista@j,w
  2550     06A5                     u665:
  2551     06A5  1803               	skipnc
  2552     06A6  2EA8               	goto	u661
  2553     06A7  2EA9               	goto	u660
  2554     06A8                     u661:
  2555     06A8  2EBC               	goto	l1589
  2556     06A9                     u660:
  2557     06A9                     l1587:
  2558     06A9  3016               	movlw	22
  2559     06AA  00F0               	movwf	___bmul@multiplicand
  2560     06AB  0020               	movlb	0	; select bank0
  2561     06AC  0845               	movf	exibirLista@i,w
  2562     06AD  3184  24A7  3186   	fcall	___bmul
  2563     06B0  3E01               	addlw	(low (_listaclientes+1))& (0+255)
  2564     06B1  0020               	movlb	0	; select bank0
  2565     06B2  0741               	addwf	exibirLista@j,w
  2566     06B3  00F6               	movwf	___eetoc@addr
  2567     06B4  3184  2474  3186   	fcall	___eetoc
  2568     06B7  3A00               	xorlw	0
  2569     06B8  1D03               	skipz
  2570     06B9  2EBB               	goto	u671
  2571     06BA  2EBC               	goto	u670
  2572     06BB                     u671:
  2573     06BB  2E86               	goto	l1581
  2574     06BC                     u670:
  2575     06BC                     l1589:
  2576                           
  2577                           ;main.c: 81:             EUSART_Write(0x0D);
  2578     06BC  300D               	movlw	13
  2579     06BD  3184  246A  3186   	fcall	_EUSART_Write
  2580                           
  2581                           ;main.c: 82:         } else if(listaclientes[i].estado == 1) {
  2582     06C0  2F18               	goto	l1607
  2583     06C1                     l1591:
  2584     06C1  3016               	movlw	22
  2585     06C2  00F0               	movwf	___bmul@multiplicand
  2586     06C3  0020               	movlb	0	; select bank0
  2587     06C4  0845               	movf	exibirLista@i,w
  2588     06C5  3184  24A7  3186   	fcall	___bmul
  2589     06C8  3E00               	addlw	(low _listaclientes)& (0+255)
  2590     06C9  00F6               	movwf	___eetoc@addr
  2591     06CA  3184  2474  3186   	fcall	___eetoc
  2592     06CD  3A01               	xorlw	1
  2593     06CE  1D03               	skipz
  2594     06CF  2ED1               	goto	u681
  2595     06D0  2ED2               	goto	u680
  2596     06D1                     u681:
  2597     06D1  2F18               	goto	l1607
  2598     06D2                     u680:
  2599     06D2                     l1593:
  2600                           
  2601                           ;main.c: 83:             EUSART_Write(0x20);
  2602     06D2  3020               	movlw	32
  2603     06D3  3184  246A  3186   	fcall	_EUSART_Write
  2604                           
  2605                           ;main.c: 84:             EUSART_Write(0x20);
  2606     06D6  3020               	movlw	32
  2607     06D7  3184  246A  3186   	fcall	_EUSART_Write
  2608     06DA                     l1595:
  2609                           
  2610                           ;main.c: 85:             for(int j = 0; j < 20 && listaclientes[i].Nome[j] != 0; j++){
  2611     06DA  0020               	movlb	0	; select bank0
  2612     06DB  01C3               	clrf	exibirLista@j_417
  2613     06DC  01C4               	clrf	exibirLista@j_417+1
  2614     06DD  2EF4               	goto	l1601
  2615     06DE                     l1597:
  2616                           
  2617                           ;main.c: 86:             EUSART_Write(listaclientes[i].Nome[j]);
  2618     06DE  3016               	movlw	22
  2619     06DF  00F0               	movwf	___bmul@multiplicand
  2620     06E0  0020               	movlb	0	; select bank0
  2621     06E1  0845               	movf	exibirLista@i,w
  2622     06E2  3184  24A7  3186   	fcall	___bmul
  2623     06E5  3E01               	addlw	(low (_listaclientes+1))& (0+255)
  2624     06E6  0020               	movlb	0	; select bank0
  2625     06E7  0743               	addwf	exibirLista@j_417,w
  2626     06E8  00F6               	movwf	___eetoc@addr
  2627     06E9  3184  2474  3186   	fcall	___eetoc
  2628     06EC  3184  246A  3186   	fcall	_EUSART_Write
  2629     06EF                     l1599:
  2630                           
  2631                           ;main.c: 87:             }
  2632     06EF  3001               	movlw	1
  2633     06F0  0020               	movlb	0	; select bank0
  2634     06F1  07C3               	addwf	exibirLista@j_417,f
  2635     06F2  3000               	movlw	0
  2636     06F3  3DC4               	addwfc	exibirLista@j_417+1,f
  2637     06F4                     l1601:
  2638     06F4  0844               	movf	exibirLista@j_417+1,w
  2639     06F5  3A80               	xorlw	128
  2640     06F6  00F8               	movwf	??_exibirLista
  2641     06F7  3080               	movlw	128
  2642     06F8  0278               	subwf	??_exibirLista,w
  2643     06F9  1D03               	skipz
  2644     06FA  2EFD               	goto	u695
  2645     06FB  3014               	movlw	20
  2646     06FC  0243               	subwf	exibirLista@j_417,w
  2647     06FD                     u695:
  2648     06FD  1803               	skipnc
  2649     06FE  2F00               	goto	u691
  2650     06FF  2F01               	goto	u690
  2651     0700                     u691:
  2652     0700  2F14               	goto	l1605
  2653     0701                     u690:
  2654     0701                     l1603:
  2655     0701  3016               	movlw	22
  2656     0702  00F0               	movwf	___bmul@multiplicand
  2657     0703  0020               	movlb	0	; select bank0
  2658     0704  0845               	movf	exibirLista@i,w
  2659     0705  3184  24A7  3186   	fcall	___bmul
  2660     0708  3E01               	addlw	(low (_listaclientes+1))& (0+255)
  2661     0709  0020               	movlb	0	; select bank0
  2662     070A  0743               	addwf	exibirLista@j_417,w
  2663     070B  00F6               	movwf	___eetoc@addr
  2664     070C  3184  2474  3186   	fcall	___eetoc
  2665     070F  3A00               	xorlw	0
  2666     0710  1D03               	skipz
  2667     0711  2F13               	goto	u701
  2668     0712  2F14               	goto	u700
  2669     0713                     u701:
  2670     0713  2EDE               	goto	l1597
  2671     0714                     u700:
  2672     0714                     l1605:
  2673                           
  2674                           ;main.c: 88:             EUSART_Write(0x0D);
  2675     0714  300D               	movlw	13
  2676     0715  3184  246A  3186   	fcall	_EUSART_Write
  2677     0718                     l1607:
  2678                           
  2679                           ;main.c: 90:     }
  2680     0718  3001               	movlw	1
  2681     0719  0020               	movlb	0	; select bank0
  2682     071A  07C5               	addwf	exibirLista@i,f
  2683     071B  3000               	movlw	0
  2684     071C  3DC6               	addwfc	exibirLista@i+1,f
  2685     071D                     l1609:
  2686     071D  0846               	movf	exibirLista@i+1,w
  2687     071E  3A80               	xorlw	128
  2688     071F  00F8               	movwf	??_exibirLista
  2689     0720  3080               	movlw	128
  2690     0721  0278               	subwf	??_exibirLista,w
  2691     0722  1D03               	skipz
  2692     0723  2F26               	goto	u715
  2693     0724  3015               	movlw	21
  2694     0725  0245               	subwf	exibirLista@i,w
  2695     0726                     u715:
  2696     0726  1C03               	skipc
  2697     0727  2F29               	goto	u711
  2698     0728  2F2A               	goto	u710
  2699     0729                     u711:
  2700     0729  2E69               	goto	l1575
  2701     072A                     u710:
  2702     072A                     l263:
  2703     072A  0008               	return
  2704     072B                     __end_of_exibirLista:
  2705                           
  2706                           	psect	text4
  2707     0474                     __ptext4:	
  2708 ;; *************** function ___eetoc *****************
  2709 ;; Defined at:
  2710 ;;		line 104 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  addr            1    6[COMMON] PTR eeprom void 
  2713 ;;		 -> listaclientes(220), 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  data            1    7[COMMON] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      unsigned char 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2725 ;;      Params:         1       0       0       0       0       0
  2726 ;;      Locals:         1       0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0
  2728 ;;      Totals:         2       0       0       0       0       0
  2729 ;;Total ram usage:        2 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 1
  2732 ;; This function calls:
  2733 ;;		___eecpymem
  2734 ;; This function is called by:
  2735 ;;		_exibirLista
  2736 ;;		_executarComando
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740     0474                     ___eetoc:	
  2741                           ;psect for function ___eetoc
  2742                           
  2743     0474                     l1509:	
  2744                           ;incstack = 0
  2745                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2746                           
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 104: __eetoc(__eep
      +                          rom void *addr);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 105
      +                          : {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 106:  unsigned 
      +                          char data;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 107:  __
      +                          eecpymem((unsigned char *) &data,addr,1);
  2749     0474  3077               	movlw	(low (___eetoc@data| 0))& (0+255)
  2750     0475  00F0               	movwf	___eecpymem@to
  2751     0476  0876               	movf	___eetoc@addr,w
  2752     0477  00F1               	movwf	___eecpymem@from
  2753     0478  01F2               	clrf	___eecpymem@size
  2754     0479  0AF2               	incf	___eecpymem@size,f
  2755     047A  3185  253D  3184   	fcall	___eecpymem
  2756     047D                     l1511:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 108:  return data;
  2759     047D  0877               	movf	___eetoc@data,w
  2760     047E                     l366:
  2761     047E  0008               	return
  2762     047F                     __end_of___eetoc:
  2763                           
  2764                           	psect	text5
  2765     053D                     __ptext5:	
  2766 ;; *************** function ___eecpymem *****************
  2767 ;; Defined at:
  2768 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  to              1    0[COMMON] PTR volatile unsigned ch
  2771 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  2772 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  2773 ;;  from            1    1[COMMON] PTR eeprom unsigned char
  2774 ;;		 -> listaclientes(220), 
  2775 ;;  size            1    2[COMMON] unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  cp              1    5[COMMON] PTR volatile unsigned ch
  2778 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  2779 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2789 ;;      Params:         3       0       0       0       0       0
  2790 ;;      Locals:         1       0       0       0       0       0
  2791 ;;      Temps:          2       0       0       0       0       0
  2792 ;;      Totals:         6       0       0       0       0       0
  2793 ;;Total ram usage:        6 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		___eetoc
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     053D                     ___eecpymem:	
  2803                           ;psect for function ___eecpymem
  2804                           
  2805     053D                     l1439:	
  2806                           ;incstack = 0
  2807                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  2808                           
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 6: __eecpymem(vola
      +                          tile unsigned char *to, __eeprom unsigned char * from, unsigned char size);C:\Program Fi
      +                          les\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 6: };C:\Program Files\Microchip\
      +                          xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.50\pic\s
      +                          ources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\
      +                          __eeprom.c: 6: };C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 7:
      +                           {
  2811     053D  0870               	movf	___eecpymem@to,w
  2812     053E  00F5               	movwf	___eecpymem@cp
  2813     053F                     l340:	
  2814                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 10:  while (EECON1
      +                          bits.WR) continue;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 
      +                          10:  __memcpyee(addr,(unsigned char *) &data,2);;C:\Program Files\Microchip\xc8\v2.50\pi
      +                          c\sources\c99\pic\__eeprom.c: 10: {
  2815                           
  2816     053F  0023               	movlb	3	; select bank3
  2817     0540  1895               	btfsc	21,1	;volsfr
  2818     0541  2D43               	goto	u511
  2819     0542  2D44               	goto	u510
  2820     0543                     u511:
  2821     0543  2D3F               	goto	l340
  2822     0544                     u510:
  2823     0544                     l1441:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 11:  EEADR = (unsi
      +                          gned char)from;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 11:
      +                            return data;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 11: 
      +                           double data;
  2826     0544  0871               	movf	___eecpymem@from,w
  2827     0545  00F3               	movwf	??___eecpymem
  2828     0546  01F4               	clrf	??___eecpymem+1
  2829     0547  0873               	movf	??___eecpymem,w
  2830     0548  0091               	movwf	17	;volatile
  2831     0549  0874               	movf	??___eecpymem+1,w
  2832     054A  0092               	movwf	18	;volatile
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 12:  while(size--)
      +                           {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 12: };C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 12:  __eecpymem((unsigned cha
      +                          r *) &data,addr,4);
  2835     054B  2D5E               	goto	l1453
  2836     054C                     l345:
  2837     054C  1895               	btfsc	21,1	;volsfr
  2838     054D  2D4F               	goto	u521
  2839     054E  2D50               	goto	u520
  2840     054F                     u521:
  2841     054F  2D4C               	goto	l345
  2842     0550                     u520:
  2843     0550                     l1443:
  2844                           
  2845                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 15:   EECON1 &= 0x
      +                          7F;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 15: 
  2846     0550  307F               	movlw	127
  2847     0551  0595               	andwf	21,f	;volsfr
  2848     0552                     l1445:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 17:   EECON1bits.R
      +                          D = 1;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 17: __fttoee
      +                          (__eeprom void *addr, float data)
  2851     0552  1415               	bsf	21,0	;volsfr
  2852     0553                     l1447:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 18:   *cp++ = EEDA
      +                          TA;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 18: {
  2855     0553  0875               	movf	___eecpymem@cp,w
  2856     0554  0086               	movwf	6
  2857     0555  0187               	clrf	7
  2858     0556  0813               	movf	19,w	;volatile
  2859     0557  0081               	movwf	1
  2860     0558                     l1449:
  2861     0558  3001               	movlw	1
  2862     0559  07F5               	addwf	___eecpymem@cp,f
  2863     055A                     l1451:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 19:   ++EEADR;;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 19:  __memcpyee(addr,(
      +                          unsigned char *) &data,3);
  2866     055A  3001               	movlw	1
  2867     055B  0791               	addwf	17,f	;volatile
  2868     055C  3000               	movlw	0
  2869     055D  3D92               	addwfc	18,f	;volatile
  2870     055E                     l1453:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 12:  while(size--)
      +                           {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 12: };C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 12:  __eecpymem((unsigned cha
      +                          r *) &data,addr,4);
  2873     055E  3001               	movlw	1
  2874     055F  02F2               	subwf	___eecpymem@size,f
  2875     0560  0A72               	incf	___eecpymem@size,w
  2876     0561  1D03               	btfss	3,2
  2877     0562  2D64               	goto	u531
  2878     0563  2D65               	goto	u530
  2879     0564                     u531:
  2880     0564  2D4C               	goto	l345
  2881     0565                     u530:
  2882     0565                     l349:
  2883     0565  0008               	return
  2884     0566                     __end_of___eecpymem:
  2885                           
  2886                           	psect	text6
  2887     05E6                     __ptext6:	
  2888 ;; *************** function _armazenarNome *****************
  2889 ;; Defined at:
  2890 ;;		line 93 in file "main.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  rxChar          1    8[COMMON] unsigned char 
  2895 ;;  countByte       1    9[COMMON] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2905 ;;      Params:         0       0       0       0       0       0
  2906 ;;      Locals:         2       0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0
  2908 ;;      Totals:         2       0       0       0       0       0
  2909 ;;Total ram usage:        2 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 2
  2912 ;; This function calls:
  2913 ;;		_EUSART_Read
  2914 ;;		_EUSART_is_rx_ready
  2915 ;;		___bmul
  2916 ;;		___ctoee
  2917 ;;		_envia_mensagem
  2918 ;; This function is called by:
  2919 ;;		_executarComando
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923     05E6                     _armazenarNome:	
  2924                           ;psect for function _armazenarNome
  2925                           
  2926     05E6                     l1611:	
  2927                           ;incstack = 0
  2928                           ; Regs used in _armazenarNome: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2929                           
  2930                           
  2931                           ;main.c: 94:     static char buffer_nome[21];;main.c: 95:     uint8_t countByte = 0;
  2932     05E6  01F9               	clrf	armazenarNome@countByte
  2933                           
  2934                           ;main.c: 96:     c_Rx = 0;
  2935     05E7  01FD               	clrf	_c_Rx
  2936     05E8                     l1613:
  2937                           
  2938                           ;main.c: 97:     envia_mensagem(mensagem4);
  2939     05E8  30E8               	movlw	low (_mensagem4| (0+32768))
  2940     05E9  00F1               	movwf	envia_mensagem@mensagem
  2941     05EA  3088               	movlw	high (_mensagem4| (0+32768))
  2942     05EB  00F2               	movwf	envia_mensagem@mensagem+1
  2943     05EC  3184  24D2  3185   	fcall	_envia_mensagem
  2944                           
  2945                           ;main.c: 98:     while (c_Rx < (21 - 1)){
  2946     05EF  2E0B               	goto	l1629
  2947     05F0                     l1615:
  2948                           
  2949                           ;main.c: 99:         if (EUSART_is_rx_ready()) {
  2950     05F0  3184  243B  3185   	fcall	_EUSART_is_rx_ready
  2951     05F3  3A00               	xorlw	0
  2952     05F4  1903               	skipnz
  2953     05F5  2DF7               	goto	u721
  2954     05F6  2DF8               	goto	u720
  2955     05F7                     u721:
  2956     05F7  2E0B               	goto	l1629
  2957     05F8                     u720:
  2958     05F8                     l1617:
  2959                           
  2960                           ;main.c: 100:             uint8_t rxChar = EUSART_Read();
  2961     05F8  3184  2498  3185   	fcall	_EUSART_Read
  2962     05FB  00F8               	movwf	armazenarNome@rxChar
  2963     05FC                     l1619:
  2964                           
  2965                           ;main.c: 101:             if (rxChar == 0x0D){
  2966     05FC  300D               	movlw	13
  2967     05FD  0678               	xorwf	armazenarNome@rxChar,w
  2968     05FE  1D03               	btfss	3,2
  2969     05FF  2E01               	goto	u731
  2970     0600  2E02               	goto	u730
  2971     0601                     u731:
  2972     0601  2E03               	goto	l1625
  2973     0602                     u730:
  2974     0602  2E11               	goto	l1631
  2975     0603                     l1625:
  2976                           
  2977                           ;main.c: 105:                 buffer_nome[c_Rx] = rxChar;
  2978     0603  087D               	movf	_c_Rx,w
  2979     0604  3E20               	addlw	(low (armazenarNome@buffer_nome| 0))& (0+255)
  2980     0605  0086               	movwf	6
  2981     0606  0187               	clrf	7
  2982     0607  0878               	movf	armazenarNome@rxChar,w
  2983     0608  0081               	movwf	1
  2984     0609                     l1627:
  2985                           
  2986                           ;main.c: 106:                 c_Rx++;
  2987     0609  3001               	movlw	1
  2988     060A  07FD               	addwf	_c_Rx,f
  2989     060B                     l1629:
  2990                           
  2991                           ;main.c: 98:     while (c_Rx < (21 - 1)){
  2992     060B  3014               	movlw	20
  2993     060C  027D               	subwf	_c_Rx,w
  2994     060D  1C03               	skipc
  2995     060E  2E10               	goto	u741
  2996     060F  2E11               	goto	u740
  2997     0610                     u741:
  2998     0610  2DF0               	goto	l1615
  2999     0611                     u740:
  3000     0611                     l1631:
  3001                           
  3002                           ;main.c: 110:     buffer_nome[c_Rx] = 0;
  3003     0611  087D               	movf	_c_Rx,w
  3004     0612  3E20               	addlw	(low (armazenarNome@buffer_nome| 0))& (0+255)
  3005     0613  0086               	movwf	6
  3006     0614  0187               	clrf	7
  3007     0615  0181               	clrf	1
  3008     0616                     l1633:
  3009                           
  3010                           ;main.c: 111:     if(buffer_nome[0] == 0){
  3011     0616  0020               	movlb	0	; select bank0
  3012     0617  0820               	movf	armazenarNome@buffer_nome,w
  3013     0618  1D03               	btfss	3,2
  3014     0619  2E1B               	goto	u751
  3015     061A  2E1C               	goto	u750
  3016     061B                     u751:
  3017     061B  2E33               	goto	l1641
  3018     061C                     u750:
  3019     061C                     l1635:
  3020                           
  3021                           ;main.c: 112:         nome_nulo = 1;
  3022     061C  3001               	movlw	1
  3023     061D  00BD               	movwf	_nome_nulo
  3024     061E                     l1637:
  3025                           
  3026                           ;main.c: 113:         envia_mensagem(mensagem5);
  3027     061E  3058               	movlw	low (_mensagem5| (0+32768))
  3028     061F  00F1               	movwf	envia_mensagem@mensagem
  3029     0620  3088               	movlw	high (_mensagem5| (0+32768))
  3030     0621  00F2               	movwf	envia_mensagem@mensagem+1
  3031     0622  3184  24D2  3185   	fcall	_envia_mensagem
  3032     0625                     l1639:
  3033                           
  3034                           ;main.c: 114:         listaclientes[countNome].estado = 0;
  3035     0625  3016               	movlw	22
  3036     0626  00F0               	movwf	___bmul@multiplicand
  3037     0627  0020               	movlb	0	; select bank0
  3038     0628  083E               	movf	_countNome,w
  3039     0629  3184  24A7  3185   	fcall	___bmul
  3040     062C  3E00               	addlw	(low _listaclientes)& (0+255)
  3041     062D  00F6               	movwf	___ctoee@addr
  3042     062E  01F7               	clrf	___ctoee@data
  3043     062F  3184  2460  3185   	fcall	___ctoee
  3044                           
  3045                           ;main.c: 115:     }
  3046     0632  2E65               	goto	l279
  3047     0633                     l1641:
  3048                           
  3049                           ;main.c: 117:         nome_nulo = 0;
  3050     0633  01BD               	clrf	_nome_nulo
  3051     0634                     l1643:
  3052                           
  3053                           ;main.c: 118:         envia_mensagem(mensagem8);
  3054     0634  30BC               	movlw	low (_mensagem8| (0+32768))
  3055     0635  00F1               	movwf	envia_mensagem@mensagem
  3056     0636  3088               	movlw	high (_mensagem8| (0+32768))
  3057     0637  00F2               	movwf	envia_mensagem@mensagem+1
  3058     0638  3184  24D2  3185   	fcall	_envia_mensagem
  3059                           
  3060                           ;main.c: 119:         while(countByte < 21){
  3061     063B  2E51               	goto	l1649
  3062     063C                     l1645:
  3063                           
  3064                           ;main.c: 120:             listaclientes[countNome].Nome[countByte] = buffer_nome[countBy
      +                          te];
  3065     063C  3016               	movlw	22
  3066     063D  00F0               	movwf	___bmul@multiplicand
  3067     063E  0020               	movlb	0	; select bank0
  3068     063F  083E               	movf	_countNome,w
  3069     0640  3184  24A7  3185   	fcall	___bmul
  3070     0643  3E01               	addlw	(low (_listaclientes+1))& (0+255)
  3071     0644  0779               	addwf	armazenarNome@countByte,w
  3072     0645  00F6               	movwf	___ctoee@addr
  3073     0646  0879               	movf	armazenarNome@countByte,w
  3074     0647  3E20               	addlw	(low (armazenarNome@buffer_nome| 0))& (0+255)
  3075     0648  0086               	movwf	6
  3076     0649  0187               	clrf	7
  3077     064A  0801               	movf	1,w
  3078     064B  00F7               	movwf	___ctoee@data
  3079     064C  3184  2460  3185   	fcall	___ctoee
  3080     064F                     l1647:
  3081                           
  3082                           ;main.c: 121:             countByte++;
  3083     064F  3001               	movlw	1
  3084     0650  07F9               	addwf	armazenarNome@countByte,f
  3085     0651                     l1649:
  3086                           
  3087                           ;main.c: 119:         while(countByte < 21){
  3088     0651  3015               	movlw	21
  3089     0652  0279               	subwf	armazenarNome@countByte,w
  3090     0653  1C03               	skipc
  3091     0654  2E56               	goto	u761
  3092     0655  2E57               	goto	u760
  3093     0656                     u761:
  3094     0656  2E3C               	goto	l1645
  3095     0657                     u760:
  3096     0657                     l1651:
  3097                           
  3098                           ;main.c: 123:         listaclientes[countNome].estado = 1;
  3099     0657  3016               	movlw	22
  3100     0658  00F0               	movwf	___bmul@multiplicand
  3101     0659  0020               	movlb	0	; select bank0
  3102     065A  083E               	movf	_countNome,w
  3103     065B  3184  24A7  3185   	fcall	___bmul
  3104     065E  3E00               	addlw	(low _listaclientes)& (0+255)
  3105     065F  00F6               	movwf	___ctoee@addr
  3106     0660  01F7               	clrf	___ctoee@data
  3107     0661  0AF7               	incf	___ctoee@data,f
  3108     0662  3184  2460  3185   	fcall	___ctoee
  3109     0665                     l279:
  3110     0665  0008               	return
  3111     0666                     __end_of_armazenarNome:
  3112                           
  3113                           	psect	text7
  3114     043B                     __ptext7:	
  3115 ;; *************** function _EUSART_is_rx_ready *****************
  3116 ;; Defined at:
  3117 ;;		line 99 in file "mcc_generated_files/eusart.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      _Bool 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3131 ;;      Params:         0       0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_armazenarNome
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145     043B                     _EUSART_is_rx_ready:	
  3146                           ;psect for function _EUSART_is_rx_ready
  3147                           
  3148     043B                     l1483:	
  3149                           ;incstack = 0
  3150                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3151                           
  3152                           
  3153                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  3154     043B  0020               	movlb	0	; select bank0
  3155     043C  0E11               	swapf	17,w	;volatile
  3156     043D  0C89               	rrf	9,f
  3157     043E  3901               	andlw	1
  3158     043F                     l51:
  3159     043F  0008               	return
  3160     0440                     __end_of_EUSART_is_rx_ready:
  3161                           
  3162                           	psect	text8
  3163     0498                     __ptext8:	
  3164 ;; *************** function _EUSART_Read *****************
  3165 ;; Defined at:
  3166 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      unsigned char 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3180 ;;      Params:         0       0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_armazenarNome
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194     0498                     _EUSART_Read:	
  3195                           ;psect for function _EUSART_Read
  3196                           
  3197     0498                     l1487:	
  3198                           ;incstack = 0
  3199                           ; Regs used in _EUSART_Read: [wreg+status,2]
  3200                           
  3201     0498                     l60:	
  3202                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  3203                           
  3204                           
  3205                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  3206     0498  0020               	movlb	0	; select bank0
  3207     0499  1E91               	btfss	17,5	;volatile
  3208     049A  2C9C               	goto	u591
  3209     049B  2C9D               	goto	u590
  3210     049C                     u591:
  3211     049C  2C98               	goto	l60
  3212     049D                     u590:
  3213     049D                     l1489:
  3214                           
  3215                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  3216     049D  01C0               	clrf	_eusartRxLastError	;volatile
  3217     049E                     l1491:
  3218                           
  3219                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  3220     049E  0023               	movlb	3	; select bank3
  3221     049F  1C9D               	btfss	29,1	;volatile
  3222     04A0  2CA2               	goto	u601
  3223     04A1  2CA3               	goto	u600
  3224     04A2                     u601:
  3225     04A2  2CA5               	goto	l1495
  3226     04A3                     u600:
  3227     04A3                     l1493:
  3228                           
  3229                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  3230     04A3  121D               	bcf	29,4	;volatile
  3231                           
  3232                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  3233     04A4  161D               	bsf	29,4	;volatile
  3234     04A5                     l1495:
  3235                           
  3236                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  3237     04A5  0819               	movf	25,w	;volatile
  3238     04A6                     l64:
  3239     04A6  0008               	return
  3240     04A7                     __end_of_EUSART_Read:
  3241                           
  3242                           	psect	text9
  3243     0514                     __ptext9:	
  3244 ;; *************** function _apagarLista *****************
  3245 ;; Defined at:
  3246 ;;		line 128 in file "main.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  i               2    9[COMMON] int 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3260 ;;      Params:         0       0       0       0       0       0
  3261 ;;      Locals:         2       0       0       0       0       0
  3262 ;;      Temps:          1       0       0       0       0       0
  3263 ;;      Totals:         3       0       0       0       0       0
  3264 ;;Total ram usage:        3 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 2
  3267 ;; This function calls:
  3268 ;;		___bmul
  3269 ;;		___ctoee
  3270 ;;		_envia_mensagem
  3271 ;; This function is called by:
  3272 ;;		_executarComando
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276     0514                     _apagarLista:	
  3277                           ;psect for function _apagarLista
  3278                           
  3279     0514                     l1653:	
  3280                           ;incstack = 0
  3281                           ; Regs used in _apagarLista: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3282                           
  3283                           
  3284                           ;main.c: 129:     for(int i = 0; i < 10; i++){
  3285     0514  01F9               	clrf	apagarLista@i
  3286     0515  01FA               	clrf	apagarLista@i+1
  3287     0516                     l1659:
  3288                           
  3289                           ;main.c: 130:         listaclientes[i].estado = 0;
  3290     0516  3016               	movlw	22
  3291     0517  00F0               	movwf	___bmul@multiplicand
  3292     0518  0879               	movf	apagarLista@i,w
  3293     0519  3184  24A7  3185   	fcall	___bmul
  3294     051C  3E00               	addlw	(low _listaclientes)& (0+255)
  3295     051D  00F6               	movwf	___ctoee@addr
  3296     051E  01F7               	clrf	___ctoee@data
  3297     051F  3184  2460  3185   	fcall	___ctoee
  3298     0522                     l1661:
  3299                           
  3300                           ;main.c: 131:     }
  3301     0522  3001               	movlw	1
  3302     0523  07F9               	addwf	apagarLista@i,f
  3303     0524  3000               	movlw	0
  3304     0525  3DFA               	addwfc	apagarLista@i+1,f
  3305     0526                     l1663:
  3306     0526  087A               	movf	apagarLista@i+1,w
  3307     0527  3A80               	xorlw	128
  3308     0528  00F8               	movwf	??_apagarLista
  3309     0529  3080               	movlw	128
  3310     052A  0278               	subwf	??_apagarLista,w
  3311     052B  1D03               	skipz
  3312     052C  2D2F               	goto	u775
  3313     052D  300A               	movlw	10
  3314     052E  0279               	subwf	apagarLista@i,w
  3315     052F                     u775:
  3316     052F  1C03               	skipc
  3317     0530  2D32               	goto	u771
  3318     0531  2D33               	goto	u770
  3319     0532                     u771:
  3320     0532  2D16               	goto	l1659
  3321     0533                     u770:
  3322     0533                     l1665:
  3323                           
  3324                           ;main.c: 132:     countNome = 0;
  3325     0533  0020               	movlb	0	; select bank0
  3326     0534  01BE               	clrf	_countNome
  3327     0535                     l1667:
  3328                           
  3329                           ;main.c: 133:     envia_mensagem(mensagem2);
  3330     0535  30A0               	movlw	low (_mensagem2| (0+32768))
  3331     0536  00F1               	movwf	envia_mensagem@mensagem
  3332     0537  3088               	movlw	high (_mensagem2| (0+32768))
  3333     0538  00F2               	movwf	envia_mensagem@mensagem+1
  3334     0539  3184  24D2  3185   	fcall	_envia_mensagem
  3335     053C                     l284:
  3336     053C  0008               	return
  3337     053D                     __end_of_apagarLista:
  3338                           
  3339                           	psect	text10
  3340     04D2                     __ptext10:	
  3341 ;; *************** function _envia_mensagem *****************
  3342 ;; Defined at:
  3343 ;;		line 59 in file "main.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  mensagem        2    1[COMMON] PTR const unsigned char 
  3346 ;;		 -> mensagem6(38), mensagem3(9), mensagem7(34), mensagem1(22), 
  3347 ;;		 -> mensagem2(28), mensagem8(22), mensagem5(38), mensagem4(15), 
  3348 ;;		 -> mensagem0(50), 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  i               1    4[COMMON] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3360 ;;      Params:         2       0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0       0
  3362 ;;      Temps:          1       0       0       0       0       0
  3363 ;;      Totals:         4       0       0       0       0       0
  3364 ;;Total ram usage:        4 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 1
  3367 ;; This function calls:
  3368 ;;		_EUSART_Write
  3369 ;; This function is called by:
  3370 ;;		_exibirMenu
  3371 ;;		_armazenarNome
  3372 ;;		_apagarLista
  3373 ;;		_executarComando
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377     04D2                     _envia_mensagem:	
  3378                           ;psect for function _envia_mensagem
  3379                           
  3380     04D2                     l1499:	
  3381                           ;incstack = 0
  3382                           ; Regs used in _envia_mensagem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3383                           
  3384                           
  3385                           ;main.c: 60:     uint8_t i = 0;
  3386     04D2  01F4               	clrf	envia_mensagem@i
  3387                           
  3388                           ;main.c: 61:     while (mensagem[i] > 0) {
  3389     04D3  2CE1               	goto	l1505
  3390     04D4                     l1501:
  3391                           
  3392                           ;main.c: 62:         EUSART_Write(mensagem[i]);
  3393     04D4  0874               	movf	envia_mensagem@i,w
  3394     04D5  0771               	addwf	envia_mensagem@mensagem,w
  3395     04D6  0084               	movwf	4
  3396     04D7  0872               	movf	envia_mensagem@mensagem+1,w
  3397     04D8  1803               	skipnc
  3398     04D9  3E01               	addlw	1
  3399     04DA  0085               	movwf	5
  3400     04DB  0800               	movf	0,w	;code access
  3401     04DC  3184  246A  3184   	fcall	_EUSART_Write
  3402     04DF                     l1503:
  3403                           
  3404                           ;main.c: 63:         i++;
  3405     04DF  3001               	movlw	1
  3406     04E0  07F4               	addwf	envia_mensagem@i,f
  3407     04E1                     l1505:
  3408                           
  3409                           ;main.c: 61:     while (mensagem[i] > 0) {
  3410     04E1  0874               	movf	envia_mensagem@i,w
  3411     04E2  0771               	addwf	envia_mensagem@mensagem,w
  3412     04E3  0084               	movwf	4
  3413     04E4  0872               	movf	envia_mensagem@mensagem+1,w
  3414     04E5  1803               	skipnc
  3415     04E6  3E01               	addlw	1
  3416     04E7  0085               	movwf	5
  3417     04E8  0012               	moviw fsr0++
  3418     04E9  1D03               	btfss	3,2
  3419     04EA  2CEC               	goto	u611
  3420     04EB  2CED               	goto	u610
  3421     04EC                     u611:
  3422     04EC  2CD4               	goto	l1501
  3423     04ED                     u610:
  3424     04ED                     l1507:
  3425                           
  3426                           ;main.c: 65:     EUSART_Write(0x0D);
  3427     04ED  300D               	movlw	13
  3428     04EE  3184  246A  3184   	fcall	_EUSART_Write
  3429     04F1                     l242:
  3430     04F1  0008               	return
  3431     04F2                     __end_of_envia_mensagem:
  3432                           
  3433                           	psect	text11
  3434     046A                     __ptext11:	
  3435 ;; *************** function _EUSART_Write *****************
  3436 ;; Defined at:
  3437 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  txData          1    wreg     unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  txData          1    0[COMMON] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3451 ;;      Params:         0       0       0       0       0       0
  3452 ;;      Locals:         1       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0
  3454 ;;      Totals:         1       0       0       0       0       0
  3455 ;;Total ram usage:        1 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_envia_mensagem
  3461 ;;		_exibirLista
  3462 ;;		_executarComando
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466     046A                     _EUSART_Write:	
  3467                           ;psect for function _EUSART_Write
  3468                           
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _EUSART_Write: [wreg]
  3472                           ;EUSART_Write@txData stored from wreg
  3473     046A  00F0               	movwf	EUSART_Write@txData
  3474     046B                     l1435:
  3475     046B                     l67:	
  3476                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3477                           
  3478                           
  3479                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3480     046B  0020               	movlb	0	; select bank0
  3481     046C  1E11               	btfss	17,4	;volatile
  3482     046D  2C6F               	goto	u501
  3483     046E  2C70               	goto	u500
  3484     046F                     u501:
  3485     046F  2C6B               	goto	l67
  3486     0470                     u500:
  3487     0470                     l1437:
  3488                           
  3489                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3490     0470  0870               	movf	EUSART_Write@txData,w
  3491     0471  0023               	movlb	3	; select bank3
  3492     0472  009A               	movwf	26	;volatile
  3493     0473                     l70:
  3494     0473  0008               	return
  3495     0474                     __end_of_EUSART_Write:
  3496                           
  3497                           	psect	text12
  3498     0460                     __ptext12:	
  3499 ;; *************** function ___ctoee *****************
  3500 ;; Defined at:
  3501 ;;		line 150 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  addr            1    6[COMMON] PTR eeprom void 
  3504 ;;		 -> listaclientes(220), 
  3505 ;;  data            1    7[COMMON] unsigned char 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      unsigned char 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3517 ;;      Params:         2       0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0
  3520 ;;      Totals:         2       0       0       0       0       0
  3521 ;;Total ram usage:        2 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 1
  3524 ;; This function calls:
  3525 ;;		___memcpyee
  3526 ;; This function is called by:
  3527 ;;		_armazenarNome
  3528 ;;		_apagarLista
  3529 ;;		_executarComando
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533     0460                     ___ctoee:	
  3534                           ;psect for function ___ctoee
  3535                           
  3536     0460                     l1515:	
  3537                           ;incstack = 0
  3538                           ; Regs used in ___ctoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3539                           
  3540     0460  0876               	movf	___ctoee@addr,w
  3541     0461  00F0               	movwf	___memcpyee@to
  3542     0462  3077               	movlw	(low (___ctoee@data| 0))& (0+255)
  3543     0463  00F1               	movwf	___memcpyee@from
  3544     0464  01F2               	clrf	___memcpyee@size
  3545     0465  0AF2               	incf	___memcpyee@size,f
  3546     0466  3185  25A3  3184   	fcall	___memcpyee
  3547     0469                     l381:
  3548     0469  0008               	return
  3549     046A                     __end_of___ctoee:
  3550                           
  3551                           	psect	text13
  3552     05A3                     __ptext13:	
  3553 ;; *************** function ___memcpyee *****************
  3554 ;; Defined at:
  3555 ;;		line 39 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  to              1    0[COMMON] PTR eeprom unsigned char
  3558 ;;		 -> listaclientes(220), 
  3559 ;;  from            1    1[COMMON] PTR const unsigned char 
  3560 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  3561 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  3562 ;;  size            1    2[COMMON] unsigned char 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  ptr             1    5[COMMON] PTR const unsigned char 
  3565 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  3566 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3576 ;;      Params:         3       0       0       0       0       0
  3577 ;;      Locals:         1       0       0       0       0       0
  3578 ;;      Temps:          2       0       0       0       0       0
  3579 ;;      Totals:         6       0       0       0       0       0
  3580 ;;Total ram usage:        6 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		___ctoee
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589     05A3                     ___memcpyee:	
  3590                           ;psect for function ___memcpyee
  3591                           
  3592     05A3                     l1455:	
  3593                           ;incstack = 0
  3594                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
  3595                           
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 39: __memcpyee(__e
      +                          eprom unsigned char * to, const unsigned char *from, unsigned char size);C:\Program File
      +                          s\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 40: {;C:\Program Files\Microchip\x
      +                          c8\v2.50\pic\sources\c99\pic\__eeprom.c: 41:  const unsigned char *ptr =from;
  3598     05A3  0871               	movf	___memcpyee@from,w
  3599     05A4  00F5               	movwf	___memcpyee@ptr
  3600     05A5                     l352:	
  3601                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 43:  while (EECON1
      +                          bits.WR) continue;
  3602                           
  3603     05A5  0023               	movlb	3	; select bank3
  3604     05A6  1895               	btfsc	21,1	;volsfr
  3605     05A7  2DA9               	goto	u541
  3606     05A8  2DAA               	goto	u540
  3607     05A9                     u541:
  3608     05A9  2DA5               	goto	l352
  3609     05AA                     u540:
  3610     05AA                     l1457:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 44:  EEADR = (unsi
      +                          gned char)to - 1U;
  3613     05AA  0870               	movf	___memcpyee@to,w
  3614     05AB  3EFF               	addlw	255
  3615     05AC  00F3               	movwf	??___memcpyee
  3616     05AD  30FF               	movlw	255
  3617     05AE  1803               	skipnc
  3618     05AF  3000               	movlw	0
  3619     05B0  00F4               	movwf	??___memcpyee+1
  3620     05B1  0873               	movf	??___memcpyee,w
  3621     05B2  0091               	movwf	17	;volatile
  3622     05B3  0874               	movf	??___memcpyee+1,w
  3623     05B4  0092               	movwf	18	;volatile
  3624     05B5                     l1459:
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 46:  EECON1 &= 0x7
      +                          F;
  3627     05B5  307F               	movlw	127
  3628     05B6  0595               	andwf	21,f	;volsfr
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 48:  while(size--)
      +                           {
  3631     05B7  2DDE               	goto	l1475
  3632     05B8                     l357:	
  3633                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 51:   }
  3634                           
  3635                           
  3636                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 49:   while (EECON
      +                          1bits.WR) {
  3637     05B8  0023               	movlb	3	; select bank3
  3638     05B9  1895               	btfsc	21,1	;volsfr
  3639     05BA  2DBC               	goto	u551
  3640     05BB  2DBD               	goto	u550
  3641     05BC                     u551:
  3642     05BC  2DB8               	goto	l357
  3643     05BD                     u550:
  3644     05BD                     l1461:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 52:   EEDATA = *pt
      +                          r++;
  3647     05BD  0875               	movf	___memcpyee@ptr,w
  3648     05BE  0086               	movwf	6
  3649     05BF  0187               	clrf	7
  3650     05C0  0801               	movf	1,w
  3651     05C1  0093               	movwf	19	;volatile
  3652     05C2                     l1463:
  3653     05C2  3001               	movlw	1
  3654     05C3  07F5               	addwf	___memcpyee@ptr,f
  3655     05C4                     l1465:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 53:   ++EEADR;
  3658     05C4  3001               	movlw	1
  3659     05C5  0791               	addwf	17,f	;volatile
  3660     05C6  3000               	movlw	0
  3661     05C7  3D92               	addwfc	18,f	;volatile
  3662     05C8                     l1467:
  3663                           
  3664                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 54:   STATUSbits.C
      +                          ARRY = 0;
  3665     05C8  0020               	movlb	0	; select bank0
  3666     05C9  1003               	bcf	3,0	;volatile
  3667     05CA                     l1469:
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 55:   if (INTCONbi
      +                          ts.GIE) {
  3670     05CA  1F8B               	btfss	11,7	;volatile
  3671     05CB  2DCD               	goto	u561
  3672     05CC  2DCE               	goto	u560
  3673     05CD                     u561:
  3674     05CD  2DCF               	goto	l360
  3675     05CE                     u560:
  3676     05CE                     l1471:
  3677                           
  3678                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 56:    STATUSbits.
      +                          CARRY = 1;
  3679     05CE  1403               	bsf	3,0	;volatile
  3680     05CF                     l360:	
  3681                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 57:   }
  3682                           
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 58:   INTCONbits.G
      +                          IE = 0;
  3685     05CF  138B               	bcf	11,7	;volatile
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 59:   EECON1bits.W
      +                          REN = 1;
  3688     05D0  0023               	movlb	3	; select bank3
  3689     05D1  1515               	bsf	21,2	;volsfr
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 60:   EECON2 = 0x5
      +                          5;
  3692     05D2  3055               	movlw	85
  3693     05D3  0096               	movwf	22	;volsfr
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 61:   EECON2 = 0xA
      +                          A;
  3696     05D4  30AA               	movlw	170
  3697     05D5  0096               	movwf	22	;volsfr
  3698                           
  3699                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 62:   EECON1bits.W
      +                          R = 1;
  3700     05D6  1495               	bsf	21,1	;volsfr
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 63:   EECON1bits.W
      +                          REN = 0;
  3703     05D7  1115               	bcf	21,2	;volsfr
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 64:   if (STATUSbi
      +                          ts.CARRY) {
  3706     05D8  0020               	movlb	0	; select bank0
  3707     05D9  1C03               	btfss	3,0	;volatile
  3708     05DA  2DDC               	goto	u571
  3709     05DB  2DDD               	goto	u570
  3710     05DC                     u571:
  3711     05DC  2DDE               	goto	l1475
  3712     05DD                     u570:
  3713     05DD                     l1473:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 65:    INTCONbits.
      +                          GIE = 1;
  3716     05DD  178B               	bsf	11,7	;volatile
  3717     05DE                     l1475:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeprom.c: 48:  while(size--)
      +                           {
  3720     05DE  3001               	movlw	1
  3721     05DF  02F2               	subwf	___memcpyee@size,f
  3722     05E0  0A72               	incf	___memcpyee@size,w
  3723     05E1  1D03               	btfss	3,2
  3724     05E2  2DE4               	goto	u581
  3725     05E3  2DE5               	goto	u580
  3726     05E4                     u581:
  3727     05E4  2DB8               	goto	l357
  3728     05E5                     u580:
  3729     05E5                     l363:
  3730     05E5  0008               	return
  3731     05E6                     __end_of___memcpyee:
  3732                           
  3733                           	psect	text14
  3734     04A7                     __ptext14:	
  3735 ;; *************** function ___bmul *****************
  3736 ;; Defined at:
  3737 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  multiplier      1    wreg     unsigned char 
  3740 ;;  multiplicand    1    0[COMMON] unsigned char 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  multiplier      1    2[COMMON] unsigned char 
  3743 ;;  product         1    1[COMMON] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      unsigned char 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2, status,0
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3753 ;;      Params:         1       0       0       0       0       0
  3754 ;;      Locals:         2       0       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0       0
  3756 ;;      Totals:         3       0       0       0       0       0
  3757 ;;Total ram usage:        3 bytes
  3758 ;; Hardware stack levels used: 1
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_exibirLista
  3763 ;;		_armazenarNome
  3764 ;;		_apagarLista
  3765 ;;		_executarComando
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769     04A7                     ___bmul:	
  3770                           ;psect for function ___bmul
  3771                           
  3772                           
  3773                           ;incstack = 0
  3774                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3775                           ;___bmul@multiplier stored from wreg
  3776     04A7  00F2               	movwf	___bmul@multiplier
  3777     04A8                     l1519:
  3778     04A8  01F1               	clrf	___bmul@product
  3779     04A9                     l1521:
  3780     04A9  1C72               	btfss	___bmul@multiplier,0
  3781     04AA  2CAC               	goto	u621
  3782     04AB  2CAD               	goto	u620
  3783     04AC                     u621:
  3784     04AC  2CAF               	goto	l1525
  3785     04AD                     u620:
  3786     04AD                     l1523:
  3787     04AD  0870               	movf	___bmul@multiplicand,w
  3788     04AE  07F1               	addwf	___bmul@product,f
  3789     04AF                     l1525:
  3790     04AF  1003               	clrc
  3791     04B0  0DF0               	rlf	___bmul@multiplicand,f
  3792     04B1                     l1527:
  3793     04B1  1003               	clrc
  3794     04B2  0CF2               	rrf	___bmul@multiplier,f
  3795     04B3  0872               	movf	___bmul@multiplier,w
  3796     04B4  1D03               	btfss	3,2
  3797     04B5  2CB7               	goto	u631
  3798     04B6  2CB8               	goto	u630
  3799     04B7                     u631:
  3800     04B7  2CA9               	goto	l1521
  3801     04B8                     u630:
  3802     04B8                     l1529:
  3803     04B8  0871               	movf	___bmul@product,w
  3804     04B9                     l499:
  3805     04B9  0008               	return
  3806     04BA                     __end_of___bmul:
  3807                           
  3808                           	psect	text15
  3809     048B                     __ptext15:	
  3810 ;; *************** function _SYSTEM_Initialize *****************
  3811 ;; Defined at:
  3812 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0, pclath, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3826 ;;      Params:         0       0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0
  3829 ;;      Totals:         0       0       0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 2
  3833 ;; This function calls:
  3834 ;;		_EUSART_Initialize
  3835 ;;		_OSCILLATOR_Initialize
  3836 ;;		_PIN_MANAGER_Initialize
  3837 ;;		_WDT_Initialize
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843     048B                     _SYSTEM_Initialize:	
  3844                           ;psect for function _SYSTEM_Initialize
  3845                           
  3846     048B                     l1669:	
  3847                           ;incstack = 0
  3848                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3849                           
  3850                           
  3851                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3852     048B  3184  24BA  3184   	fcall	_PIN_MANAGER_Initialize
  3853                           
  3854                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3855     048E  3184  247F  3184   	fcall	_OSCILLATOR_Initialize
  3856                           
  3857                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3858     0491  3184  2437  3184   	fcall	_WDT_Initialize
  3859     0494                     l1671:
  3860                           
  3861                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  3862     0494  3184  24F2  3184   	fcall	_EUSART_Initialize
  3863     0497                     l109:
  3864     0497  0008               	return
  3865     0498                     __end_of_SYSTEM_Initialize:
  3866                           
  3867                           	psect	text16
  3868     0437                     __ptext16:	
  3869 ;; *************** function _WDT_Initialize *****************
  3870 ;; Defined at:
  3871 ;;		line 73 in file "mcc_generated_files/mcc.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		None
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3885 ;;      Params:         0       0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0
  3888 ;;      Totals:         0       0       0       0       0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_SYSTEM_Initialize
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898     0437                     _WDT_Initialize:	
  3899                           ;psect for function _WDT_Initialize
  3900                           
  3901     0437                     l1565:	
  3902                           ;incstack = 0
  3903                           ; Regs used in _WDT_Initialize: []
  3904                           
  3905                           
  3906                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  3907     0437  3016               	movlw	22
  3908     0438  0021               	movlb	1	; select bank1
  3909     0439  0097               	movwf	23	;volatile
  3910     043A                     l118:
  3911     043A  0008               	return
  3912     043B                     __end_of_WDT_Initialize:
  3913                           
  3914                           	psect	text17
  3915     04BA                     __ptext17:	
  3916 ;; *************** function _PIN_MANAGER_Initialize *****************
  3917 ;; Defined at:
  3918 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		status,2
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3932 ;;      Params:         0       0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0
  3935 ;;      Totals:         0       0       0       0       0       0
  3936 ;;Total ram usage:        0 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_SYSTEM_Initialize
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945     04BA                     _PIN_MANAGER_Initialize:	
  3946                           ;psect for function _PIN_MANAGER_Initialize
  3947                           
  3948     04BA                     l1545:	
  3949                           ;incstack = 0
  3950                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  3951                           
  3952                           
  3953                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3954     04BA  0022               	movlb	2	; select bank2
  3955     04BB  018C               	clrf	12	;volatile
  3956                           
  3957                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3958     04BC  018D               	clrf	13	;volatile
  3959     04BD                     l1547:
  3960                           
  3961                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  3962     04BD  30FF               	movlw	255
  3963     04BE  0021               	movlb	1	; select bank1
  3964     04BF  008C               	movwf	12	;volatile
  3965     04C0                     l1549:
  3966                           
  3967                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  3968     04C0  30FF               	movlw	255
  3969     04C1  008D               	movwf	13	;volatile
  3970     04C2                     l1551:
  3971                           
  3972                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xDA;
  3973     04C2  30DA               	movlw	218
  3974     04C3  0023               	movlb	3	; select bank3
  3975     04C4  008D               	movwf	13	;volatile
  3976     04C5                     l1553:
  3977                           
  3978                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  3979     04C5  301F               	movlw	31
  3980     04C6  008C               	movwf	12	;volatile
  3981                           
  3982                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  3983     04C7  0024               	movlb	4	; select bank4
  3984     04C8  018D               	clrf	13	;volatile
  3985                           
  3986                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3987     04C9  018C               	clrf	12	;volatile
  3988     04CA                     l1555:
  3989                           
  3990                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3991     04CA  0021               	movlb	1	; select bank1
  3992     04CB  1795               	bsf	21,7	;volatile
  3993     04CC                     l1557:
  3994                           
  3995                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x80;
  3996     04CC  3080               	movlw	128
  3997     04CD  0022               	movlb	2	; select bank2
  3998     04CE  009D               	movwf	29	;volatile
  3999     04CF                     l1559:
  4000                           
  4001                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  4002     04CF  3001               	movlw	1
  4003     04D0  009E               	movwf	30	;volatile
  4004     04D1                     l193:
  4005     04D1  0008               	return
  4006     04D2                     __end_of_PIN_MANAGER_Initialize:
  4007                           
  4008                           	psect	text18
  4009     047F                     __ptext18:	
  4010 ;; *************** function _OSCILLATOR_Initialize *****************
  4011 ;; Defined at:
  4012 ;;		line 59 in file "mcc_generated_files/mcc.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		status,2
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4026 ;;      Params:         0       0       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0
  4029 ;;      Totals:         0       0       0       0       0       0
  4030 ;;Total ram usage:        0 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_SYSTEM_Initialize
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039     047F                     _OSCILLATOR_Initialize:	
  4040                           ;psect for function _OSCILLATOR_Initialize
  4041                           
  4042     047F                     l1561:	
  4043                           ;incstack = 0
  4044                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  4045                           
  4046                           
  4047                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  4048     047F  3070               	movlw	112
  4049     0480  0021               	movlb	1	; select bank1
  4050     0481  0099               	movwf	25	;volatile
  4051     0482                     l1563:
  4052                           
  4053                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  4054     0482  0198               	clrf	24	;volatile
  4055                           
  4056                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  4057     0483  0022               	movlb	2	; select bank2
  4058     0484  0196               	clrf	22	;volatile
  4059     0485                     l112:	
  4060                           ;mcc_generated_files/mcc.c: 69:     {;mcc_generated_files/mcc.c: 70:     }
  4061                           
  4062                           
  4063                           ;mcc_generated_files/mcc.c: 68:     while(PLLR == 0)
  4064     0485  0021               	movlb	1	; select bank1
  4065     0486  1F1A               	btfss	26,6	;volatile
  4066     0487  2C89               	goto	u641
  4067     0488  2C8A               	goto	u640
  4068     0489                     u641:
  4069     0489  2C85               	goto	l112
  4070     048A                     u640:
  4071     048A                     l115:
  4072     048A  0008               	return
  4073     048B                     __end_of_OSCILLATOR_Initialize:
  4074                           
  4075                           	psect	text19
  4076     04F2                     __ptext19:	
  4077 ;; *************** function _EUSART_Initialize *****************
  4078 ;; Defined at:
  4079 ;;		line 66 in file "mcc_generated_files/eusart.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4093 ;;      Params:         0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 1
  4100 ;; This function calls:
  4101 ;;		_EUSART_SetErrorHandler
  4102 ;;		_EUSART_SetFramingErrorHandler
  4103 ;;		_EUSART_SetOverrunErrorHandler
  4104 ;; This function is called by:
  4105 ;;		_SYSTEM_Initialize
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109     04F2                     _EUSART_Initialize:	
  4110                           ;psect for function _EUSART_Initialize
  4111                           
  4112     04F2                     l1533:	
  4113                           ;incstack = 0
  4114                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4115                           
  4116                           
  4117                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  4118     04F2  3008               	movlw	8
  4119     04F3  0023               	movlb	3	; select bank3
  4120     04F4  009F               	movwf	31	;volatile
  4121                           
  4122                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  4123     04F5  3090               	movlw	144
  4124     04F6  009D               	movwf	29	;volatile
  4125                           
  4126                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  4127     04F7  3024               	movlw	36
  4128     04F8  009E               	movwf	30	;volatile
  4129                           
  4130                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x8A;
  4131     04F9  308A               	movlw	138
  4132     04FA  009B               	movwf	27	;volatile
  4133     04FB                     l1535:
  4134                           
  4135                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  4136     04FB  019C               	clrf	28	;volatile
  4137     04FC                     l1537:
  4138                           
  4139                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4140     04FC  3000               	movlw	0
  4141     04FD  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4142     04FE  3000               	movlw	0
  4143     04FF  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4144     0500  3184  2446  3184   	fcall	_EUSART_SetFramingErrorHandler
  4145     0503                     l1539:
  4146                           
  4147                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4148     0503  3000               	movlw	0
  4149     0504  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4150     0505  3000               	movlw	0
  4151     0506  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4152     0507  3184  244C  3184   	fcall	_EUSART_SetOverrunErrorHandler
  4153     050A                     l1541:
  4154                           
  4155                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4156     050A  3000               	movlw	0
  4157     050B  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4158     050C  3000               	movlw	0
  4159     050D  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4160     050E  3184  2440  3184   	fcall	_EUSART_SetErrorHandler
  4161     0511                     l1543:
  4162                           
  4163                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4164     0511  0020               	movlb	0	; select bank0
  4165     0512  01C0               	clrf	_eusartRxLastError	;volatile
  4166     0513                     l43:
  4167     0513  0008               	return
  4168     0514                     __end_of_EUSART_Initialize:
  4169                           
  4170                           	psect	text20
  4171     044C                     __ptext20:	
  4172 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4173 ;; Defined at:
  4174 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4177 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4189 ;;      Params:         2       0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0
  4192 ;;      Totals:         2       0       0       0       0       0
  4193 ;;Total ram usage:        2 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_EUSART_Initialize
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202     044C                     _EUSART_SetOverrunErrorHandler:	
  4203                           ;psect for function _EUSART_SetOverrunErrorHandler
  4204                           
  4205     044C                     l1479:	
  4206                           ;incstack = 0
  4207                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4208                           
  4209                           
  4210                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4211     044C  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4212     044D  0020               	movlb	0	; select bank0
  4213     044E  00B8               	movwf	_EUSART_OverrunErrorHandler+1
  4214     044F  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4215     0450  00B7               	movwf	_EUSART_OverrunErrorHandler
  4216     0451                     l85:
  4217     0451  0008               	return
  4218     0452                     __end_of_EUSART_SetOverrunErrorHandler:
  4219                           
  4220                           	psect	text21
  4221     0446                     __ptext21:	
  4222 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4223 ;; Defined at:
  4224 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4227 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4239 ;;      Params:         2       0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0
  4242 ;;      Totals:         2       0       0       0       0       0
  4243 ;;Total ram usage:        2 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_EUSART_Initialize
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252     0446                     _EUSART_SetFramingErrorHandler:	
  4253                           ;psect for function _EUSART_SetFramingErrorHandler
  4254                           
  4255     0446                     l1477:	
  4256                           ;incstack = 0
  4257                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4258                           
  4259                           
  4260                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4261     0446  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4262     0447  0020               	movlb	0	; select bank0
  4263     0448  00BA               	movwf	_EUSART_FramingErrorHandler+1
  4264     0449  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4265     044A  00B9               	movwf	_EUSART_FramingErrorHandler
  4266     044B                     l82:
  4267     044B  0008               	return
  4268     044C                     __end_of_EUSART_SetFramingErrorHandler:
  4269                           
  4270                           	psect	text22
  4271     0440                     __ptext22:	
  4272 ;; *************** function _EUSART_SetErrorHandler *****************
  4273 ;; Defined at:
  4274 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4277 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4289 ;;      Params:         2       0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0
  4292 ;;      Totals:         2       0       0       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_EUSART_Initialize
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302     0440                     _EUSART_SetErrorHandler:	
  4303                           ;psect for function _EUSART_SetErrorHandler
  4304                           
  4305     0440                     l1481:	
  4306                           ;incstack = 0
  4307                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4308                           
  4309                           
  4310                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4311     0440  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4312     0441  0020               	movlb	0	; select bank0
  4313     0442  00B6               	movwf	_EUSART_ErrorHandler+1
  4314     0443  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4315     0444  00B5               	movwf	_EUSART_ErrorHandler
  4316     0445                     l88:
  4317     0445  0008               	return
  4318     0446                     __end_of_EUSART_SetErrorHandler:
  4319     0001                     ___latbits      equ	1
  4320     007E                     btemp           set	126	;btemp
  4321     007E                     wtemp0          set	126
  4322                           
  4323                           	psect	config
  4324                           
  4325                           ;Config register CONFIG1 @ 0x8007
  4326                           ;	Oscillator Selection
  4327                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4328                           ;	Watchdog Timer Enable
  4329                           ;	WDTE = OFF, WDT disabled
  4330                           ;	Power-up Timer Enable
  4331                           ;	PWRTE = OFF, PWRT disabled
  4332                           ;	MCLR Pin Function Select
  4333                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4334                           ;	Flash Program Memory Code Protection
  4335                           ;	CP = OFF, Program memory code protection is disabled
  4336                           ;	Data Memory Code Protection
  4337                           ;	CPD = OFF, Data memory code protection is disabled
  4338                           ;	Brown-out Reset Enable
  4339                           ;	BOREN = ON, Brown-out Reset enabled
  4340                           ;	Clock Out Enable
  4341                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4342                           ;	Internal/External Switchover
  4343                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4344                           ;	Fail-Safe Clock Monitor Enable
  4345                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4346     8007                     	org	32775
  4347     8007  3FE4               	dw	16356
  4348                           
  4349                           ;Config register CONFIG2 @ 0x8008
  4350                           ;	Flash Memory Self-Write Protection
  4351                           ;	WRT = OFF, Write protection off
  4352                           ;	PLL Enable
  4353                           ;	PLLEN = ON, 4x PLL enabled
  4354                           ;	Stack Overflow/Underflow Reset Enable
  4355                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4356                           ;	Brown-out Reset Voltage Selection
  4357                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4358                           ;	In-Circuit Debugger Mode
  4359                           ;	DEBUG = 0x1, unprogrammed default
  4360                           ;	Low-Voltage Programming Enable
  4361                           ;	LVP = ON, Low-voltage programming enabled
  4362     8008                     	org	32776
  4363     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    256
    Data        0
    BSS         254
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      9      42
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetoc@data(COMMON[1]), __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoi@data(COMMON[2]), 
		 -> __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), __eetoo@data(COMMON[8]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 220
		 -> listaclientes(EEDATA[220]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetoc@data(COMMON[1]), __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoi@data(COMMON[2]), 
		 -> __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), __eetoo@data(COMMON[8]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 220
		 -> listaclientes(EEDATA[220]), 

    envia_mensagem@mensagem	PTR const unsigned char  size(2) Largest target is 50
		 -> mensagem0(CODE[50]), mensagem1(CODE[22]), mensagem2(CODE[28]), mensagem3(CODE[9]), 
		 -> mensagem4(CODE[15]), mensagem5(CODE[38]), mensagem6(CODE[38]), mensagem7(CODE[34]), 
		 -> mensagem8(CODE[22]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 8
		 -> __ctoee@data(COMMON[1]), __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __itoee@data(COMMON[2]), 
		 -> __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), __otoee@data(COMMON[8]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> __ctoee@data(COMMON[1]), __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __itoee@data(COMMON[2]), 
		 -> __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), __otoee@data(COMMON[8]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 220
		 -> listaclientes(EEDATA[220]), 


Critical Paths under _main in COMMON

    _main->_executarComando
    _executarComando->_apagarLista
    _exibirMenu->_envia_mensagem
    _exibirLista->___eetoc
    ___eetoc->___eecpymem
    _armazenarNome->___ctoee
    _apagarLista->___ctoee
    _envia_mensagem->_EUSART_Write
    ___ctoee->___memcpyee
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_executarComando
    _executarComando->_exibirLista

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2890
                                             12 COMMON     1     1      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                    _executarComando
                         _exibirMenu
 ---------------------------------------------------------------------------------
 (1) _executarComando                                      4     4      0    2559
                                             11 COMMON     1     1      0
                                              6 BANK0      3     3      0
                       _EUSART_Write
                             ___bmul
                            ___ctoee
                            ___eetoc
                        _apagarLista
                      _armazenarNome
                     _envia_mensagem
                        _exibirLista
                         _exibirMenu
 ---------------------------------------------------------------------------------
 (1) _exibirMenu                                           0     0      0     129
                     _envia_mensagem
 ---------------------------------------------------------------------------------
 (2) _exibirLista                                          7     7      0     635
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                       _EUSART_Write
                             ___bmul
                            ___eetoc
 ---------------------------------------------------------------------------------
 (3) ___eetoc                                              2     1      1     171
                                              6 COMMON     2     1      1
                             ___bmul (ARG)
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (4) ___eecpymem                                           6     3      3      93
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _armazenarNome                                        2     2      0     517
                                              8 COMMON     2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                             ___bmul
                            ___ctoee
                     _envia_mensagem
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _apagarLista                                          3     3      0     472
                                              8 COMMON     3     3      0
                             ___bmul
                            ___ctoee
                     _envia_mensagem
 ---------------------------------------------------------------------------------
 (2) _envia_mensagem                                       4     2      2     129
                                              1 COMMON     4     2      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___ctoee                                              2     0      2     154
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
                         ___memcpyee
 ---------------------------------------------------------------------------------
 (4) ___memcpyee                                           6     3      3      93
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     121
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      69
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      69
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _executarComando
     _EUSART_Write
     ___bmul
     ___ctoee
       ___bmul (ARG)
       ___memcpyee (ARG)
     ___eetoc
       ___bmul (ARG)
       ___eecpymem (ARG)
     _apagarLista
       ___bmul
       ___ctoee
       _envia_mensagem
         _EUSART_Write
     _armazenarNome
       _EUSART_Read
       _EUSART_is_rx_ready
       ___bmul
       ___ctoee
       _envia_mensagem
     _envia_mensagem
     _exibirLista
       _EUSART_Write
       ___bmul
       ___eetoc
     _exibirMenu
       _envia_mensagem
   _exibirMenu

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            32      0       0      0.0%
BIGRAM             352      0       0      0.0%
COMMON              14     13      14    100.0%
BANK0               80      9      42     52.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      56      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jan 29 09:03:13 2025

                               ___bmul@product 0071                                             l43 0513  
                                           l51 043F                                             l60 0498  
                                           l70 0473                                             l64 04A6  
                                           l82 044B                                             l67 046B  
                                           l85 0451                                             l88 0445  
                                          l112 0485                                            l115 048A  
                                          l109 0497                                            l118 043A  
                                          l242 04F1                                            l315 05A0  
                                          l340 053F                                            l245 045F  
                                          l309 07F3                                            l263 072A  
                                          l360 05CF                                            l352 05A5  
                                          l193 04D1                                            l345 054C  
                                          l363 05E5                                            l284 053C  
                                          l357 05B8                                            l381 0469  
                                          l349 0565                                            l366 047E  
                                          l279 0665                                            l499 04B9  
                                          u500 0470                                            u501 046F  
                                          u510 0544                                            u511 0543  
                                          u600 04A3                                            u520 0550  
                                          u601 04A2                                            u521 054F  
                                          u610 04ED                                            u530 0565  
                                          u611 04EC                                            u531 0564  
                                          u620 04AD                                            u540 05AA  
                                          u700 0714                                            u621 04AC  
                                          u541 05A9                                            u701 0713  
                                          u630 04B8                                            u550 05BD  
                                          u710 072A                                            u631 04B7  
                                          u551 05BC                                            u711 0729  
                                          u640 048A                                            u560 05CE  
                                          u720 05F8                                            u800 0766  
                                          u641 0489                                            u561 05CD  
                                          u721 05F7                                            u801 0765  
                                          u570 05DD                                            u730 0602  
                                          u650 067A                                            u810 079C  
                                          u571 05DC                                            u731 0601  
                                          u715 0726                                            u651 0679  
                                          u811 079B                                            u580 05E5  
                                          u740 0611                                            u660 06A9  
                                          u820 07AF                                            u900 059C  
                                          u581 05E4                                            u741 0610  
                                          u661 06A8                                            u821 07AE  
                                          u901 059B                                            u590 049D  
                                          u750 061C                                            u670 06BC  
                                          u830 07CB                                            u591 049C  
                                          u751 061B                                            u671 06BB  
                                          u831 07CA                                            u815 0798  
                                          u760 0657                                            u680 06D2  
                                          u840 07DB                                            u761 0656  
                                          u681 06D1                                            u665 06A5  
                                          u841 07DA                                            u770 0533  
                                          u690 0701                                            u850 0576  
                                          u771 0532                                            u691 0700  
                                          u851 0575                                            u780 0736  
                                          u860 0580                                            u781 0735  
                                          u861 057F                                            u790 0752  
                                          u870 0586                                            u775 052F  
                                          u695 06FD                                            u791 0751  
                                          u871 0585                                            u880 058C  
                                          u881 058B                                            u890 0592  
                                          u891 0591                                   ___ctoee@addr 0076  
                                 ___ctoee@data 0077                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                                         l1501 04D4                                           l1503 04DF  
                                         l1511 047D                                           l1521 04A9  
                                         l1505 04E1                                           l1441 0544  
                                         l1601 06F4                                           l1523 04AD  
                                         l1515 0460                                           l1435 046B  
                                         l1507 04ED                                           l1611 05E6  
                                         l1451 055A                                           l1443 0550  
                                         l1603 0701                                           l1541 050A  
                                         l1533 04F2                                           l1525 04AF  
                                         l1461 05BD                                           l1437 0470  
                                         l1613 05E8                                           l1445 0552  
                                         l1453 055E                                           l1509 0474  
                                         l1605 0714                                           l1701 076D  
                                         l1543 0511                                           l1535 04FB  
                                         l1551 04C2                                           l1527 04B1  
                                         l1519 04A8                                           l1471 05CE  
                                         l1463 05C2                                           l1455 05A3  
                                         l1631 0611                                           l1615 05F0  
                                         l1447 0553                                           l1439 053D  
                                         l1607 0718                                           l1711 078F  
                                         l1703 0771                                           l1481 0440  
                                         l1537 04FC                                           l1561 047F  
                                         l1553 04C5                                           l1545 04BA  
                                         l1529 04B8                                           l1473 05DD  
                                         l1465 05C4                                           l1457 05AA  
                                         l1641 0633                                           l1633 0616  
                                         l1625 0603                                           l1617 05F8  
                                         l1449 0558                                           l1609 071D  
                                         l1713 079C                                           l1705 0775  
                                         l1539 0503                                           l1563 0482  
                                         l1555 04CA                                           l1547 04BD  
                                         l1467 05C8                                           l1475 05DE  
                                         l1459 05B5                                           l1491 049E  
                                         l1483 043B                                           l1651 0657  
                                         l1643 0634                                           l1635 061C  
                                         l1627 0609                                           l1619 05FC  
                                         l1731 07DC                                           l1715 07AF  
                                         l1707 0779                                           l1723 07C5  
                                         l1477 0446                                           l1557 04CC  
                                         l1549 04C0                                           l1565 0437  
                                         l1469 05CA                                           l1661 0522  
                                         l1653 0514                                           l1493 04A3  
                                         l1645 063C                                           l1637 061E  
                                         l1629 060B                                           l1581 0686  
                                         l1733 07E0                                           l1725 07CB  
                                         l1717 07B3                                           l1709 078A  
                                         l1741 0569                                           l1479 044C  
                                         l1559 04CF                                           l1671 0494  
                                         l1663 0526                                           l1495 04A5  
                                         l1487 0498                                           l1647 064F  
                                         l1639 0625                                           l1583 0697  
                                         l1591 06C1                                           l1575 0669  
                                         l1567 0458                                           l1727 07D2  
                                         l1719 07C1                                           l1751 0580  
                                         l1743 056B                                           l1665 0533  
                                         l1489 049D                                           l1649 0651  
                                         l1593 06D2                                           l1585 069C  
                                         l1577 067A                                           l1569 0666  
                                         l1729 07D5                                           l1681 0745  
                                         l1737 07E4                                           l1673 072B  
                                         l1761 059C                                           l1753 0586  
                                         l1745 056E                                           l1499 04D2  
                                         l1667 0535                                           l1659 0516  
                                         l1595 06DA                                           l1587 06A9  
                                         l1579 0682                                           l1691 0755  
                                         l1683 0749                                           l1675 072C  
                                         l1755 058C                                           l1747 0576  
                                         l1739 0566                                           l1669 048B  
                                         l1597 06DE                                           l1589 06BC  
                                         l1685 074C                                           l1677 0736  
                                         l1757 0592                                           l1749 057A  
                                         l1599 06EF                                           l1687 0752  
                                         l1679 073E                                           l1759 0596  
                                         l1697 0756                                           l1699 0766  
                                         _LATA 010C                                           _LATB 010D  
                                         _PLLR 04D6                                           _WPUA 020C  
                                         _WPUB 020D                                           _c_Rx 007D  
                                         _main 0566                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                              _executarComando 072B                                           start 0002  
                            ___bmul@multiplier 0072                                   ?_exibirLista 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 048B  
                                        ?_main 0070                                __end_of___eetoc 047F  
                                        _EEADR 0191                                __end_of___ctoee 046A  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              ??_armazenarNome 0078                                 _WDT_Initialize 0437  
                                        _nomes 003C                                  ___memcpyee@to 0070  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07F4                                   __end_of_main 05A3  
                               ??_EUSART_Write 0070                                         ??_main 007C  
                       __end_of_WDT_Initialize 043B              _EUSART_DefaultFramingErrorHandler 0000  
                      __end_of_executarComando 07F4                     _EUSART_OverrunErrorHandler 0037  
                                       _EEADRH 0192                                         _EEADRL 0191  
                                       _EEDATA 0193                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON1 0195  
                                       _EECON2 0196                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0440  
                                       _BORCON 0116                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               exibirLista@j_417 0043  
                                       ___bmul 04A7                                      ??___eetoc 0077  
                                    ??___ctoee 0078                                ?_WDT_Initialize 0070  
                               ___memcpyee@ptr 0075                                     ___eecpymem 053D  
                            _SYSTEM_Initialize 048B                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                            ___bmul@multiplicand 0070  
                                   ___memcpyee 05A3                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                envia_mensagem@i 0074  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                               _envia_mensagem 04D2                               ?_executarComando 0070  
                    __end_of_SYSTEM_Initialize 0498                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 0474                                     __pmaintext 0566  
                                      ?___bmul 0070                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                       __end_of_envia_mensagem 04F2                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0072                                    ?___eecpymem 0070  
                             executarComando@i 0049                               executarComando@j 0047  
                                 exibirLista@i 0045                                   exibirLista@j 0041  
                                  ?___memcpyee 0070                                     _exibirMenu 0458  
                                      ___eetoc 0474                                        ___ctoee 0460  
                                      __ptext1 072B                                        __ptext2 0458  
                                      __ptext3 0666                                        __ptext4 0474  
                                      __ptext5 053D                                        __ptext6 05E6  
                                      __ptext7 043B                                        __ptext8 0498  
                                      __ptext9 0514                                        _comando 003F  
                        _OSCILLATOR_Initialize 047F                              __end_of_mensagem0 0832  
                            __end_of_mensagem1 08E8                              __end_of_mensagem2 08BC  
                            __end_of_mensagem3 0900                              __end_of_mensagem4 08F7  
                            __end_of_mensagem5 087E                              __end_of_mensagem6 0858  
                            __end_of_mensagem7 08A0                              __end_of_mensagem8 08D2  
                              ?_envia_mensagem 0071                       ??_PIN_MANAGER_Initialize 0070  
                        __end_of_armazenarNome 0666                                        clrloop0 0453  
                                ??_apagarLista 0078                           end_of_initialization 07FD  
        __end_of_EUSART_SetOverrunErrorHandler 0452                  _EUSART_SetOverrunErrorHandler 044C  
                            _EUSART_Initialize 04F2                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 043B  
                              ___memcpyee@from 0071                                ___memcpyee@size 0072  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                          ?_EUSART_is_rx_ready 0070                         envia_mensagem@mensagem 0071  
                                _listaclientes 0000                      __end_of_EUSART_Initialize 0514  
                         ??_EUSART_is_rx_ready 0070                                      _TXSTAbits 019E  
                                   main@rxChar 007C                            __end_of_apagarLista 053D  
                                  ?_exibirMenu 0070                                 __end_of___bmul 04BA  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 046A  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 07F4  
                                ??_EUSART_Read 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                   _EUSART_FramingErrorHandler 0039                                       ??___bmul 0071  
                       _EUSART_SetErrorHandler 0440                                  ??_exibirLista 0078  
                                  __pbssEEDATA 0000                                    __pbssCOMMON 007D  
                                    ___latbits 0001                                  __pcstackBANK0 0041  
                                 ??___eecpymem 0073                                    _apagarLista 0514  
                          __end_of_EUSART_Read 04A7                                   ??___memcpyee 0073  
                       _PIN_MANAGER_Initialize 04BA                                       ?___eetoc 0076  
                                     ?___ctoee 0076                               ??_envia_mensagem 0073  
                           __end_of___eecpymem 0566                                      _countNome 003E  
                          __end_of_exibirLista 072B                             __end_of___memcpyee 05E6  
                                    _mensagem0 0800                                      _mensagem1 08D2  
                                    _mensagem2 08A0                                      _mensagem3 08F7  
                                    _mensagem4 08E8                                      _mensagem5 0858  
                                    _mensagem6 0832                                      _mensagem7 087E  
                                    _mensagem8 08BC                                   apagarLista@i 0079  
       EUSART_SetErrorHandler@interruptHandler 0070                                      clear_ram0 0452  
                            _eusartRxLastError 0040                                      _nome_nulo 003D  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
            _EUSART_DefaultOverrunErrorHandler 0000                         armazenarNome@countByte 0079  
                                    _verificar 003B                                    _EUSART_Read 0498  
                                   _EECON1bits 0195                                   ??_exibirMenu 0075  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 0035  
                            ??_executarComando 007B                                    _exibirLista 0666  
                                     __ptext10 04D2                                       __ptext11 046A  
                                     __ptext20 044C                                       __ptext12 0460  
                                     __ptext21 0446                                       __ptext13 05A3  
                                     __ptext22 0440                                       __ptext14 04A7  
                                     __ptext15 048B                                       __ptext16 0437  
                                     __ptext17 04BA                                       __ptext18 047F  
                                     __ptext19 04F2                            armazenarNome@rxChar 0078  
                           __end_of_exibirMenu 0460                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070          __end_of_EUSART_SetFramingErrorHandler 044C  
                _EUSART_SetFramingErrorHandler 0446                                ___eecpymem@from 0071  
                              ___eecpymem@size 0072                                     _INTCONbits 000B  
                                _armazenarNome 05E6                                   ?_apagarLista 0070  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0446  
EUSART_SetFramingErrorHandler@interruptHandler 0070                       armazenarNome@buffer_nome 0020  
                                __pstringtext1 0800                                  __pstringtext2 0832  
                                __pstringtext3 0858                                  __pstringtext4 087E  
                                __pstringtext5 08A0                                  __pstringtext6 08BC  
                                __pstringtext7 08D2                                  __pstringtext8 08E8  
                                __pstringtext9 08F7                                  ___eecpymem@cp 0075  
                                ___eecpymem@to 0070                                 ?_armazenarNome 0070  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 04D2  
                                   _STATUSbits 0003                                   ___eetoc@addr 0076  
                                 ___eetoc@data 0077  
